/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/match/[id]/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsiRDpcXGJpbmdvLWNwXFxiaW5nby1jcFxcYmluZ28tY3BcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcYXBpXFxuYXZpZ2F0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb24nO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1uYXZpZ2F0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Cbingo-cp%5C%5Cbingo-cp%5C%5Cbingo-cp%5C%5Csrc%5C%5Capp%5C%5Cmatch%5C%5C%5Bid%5D%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Cbingo-cp%5C%5Cbingo-cp%5C%5Cbingo-cp%5C%5Csrc%5C%5Capp%5C%5Cmatch%5C%5C%5Bid%5D%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/match/[id]/page.tsx */ \"(app-pages-browser)/./src/app/match/[id]/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2JpbmdvLWNwJTVDJTVDYmluZ28tY3AlNUMlNUNiaW5nby1jcCU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q21hdGNoJTVDJTVDJTVCaWQlNUQlNUMlNUNwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLG9MQUFzRyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcYmluZ28tY3BcXFxcYmluZ28tY3BcXFxcYmluZ28tY3BcXFxcc3JjXFxcXGFwcFxcXFxtYXRjaFxcXFxbaWRdXFxcXHBhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Cbingo-cp%5C%5Cbingo-cp%5C%5Cbingo-cp%5C%5Csrc%5C%5Capp%5C%5Cmatch%5C%5C%5Bid%5D%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return type.displayName || \"Context\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n      REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      react_stack_bottom_frame: function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIkQ6XFxiaW5nby1jcFxcYmluZ28tY3BcXGJpbmdvLWNwXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGNvbXBpbGVkXFxyZWFjdFxcanN4LWRldi1ydW50aW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-confetti/dist/react-confetti.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/react-confetti/dist/react-confetti.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ReactConfetti)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var tween_functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tween-functions */ \"(app-pages-browser)/./node_modules/tween-functions/index.js\");\n\n\n\n\nfunction degreesToRads(degrees) {\n    return (degrees * Math.PI) / 180;\n}\nfunction randomRange(min, max) {\n    return min + Math.random() * (max - min);\n}\nfunction randomInt(min, max) {\n    return Math.floor(min + Math.random() * (max - min + 1));\n}\n\nvar ParticleShape;\n(function (ParticleShape) {\n    ParticleShape[ParticleShape[\"Circle\"] = 0] = \"Circle\";\n    ParticleShape[ParticleShape[\"Square\"] = 1] = \"Square\";\n    ParticleShape[ParticleShape[\"Strip\"] = 2] = \"Strip\";\n})(ParticleShape || (ParticleShape = {}));\nvar RotationDirection;\n(function (RotationDirection) {\n    RotationDirection[RotationDirection[\"Positive\"] = 1] = \"Positive\";\n    RotationDirection[RotationDirection[\"Negative\"] = -1] = \"Negative\";\n})(RotationDirection || (RotationDirection = {}));\nconst DEFAULT_FRAME_TIME = 1000 / 60;\nclass Particle {\n    constructor(context, getOptions, x, y) {\n        this.getOptions = getOptions;\n        const { colors, initialVelocityX, initialVelocityY } = this.getOptions();\n        this.context = context;\n        this.x = x;\n        this.y = y;\n        this.w = randomRange(5, 20);\n        this.h = randomRange(5, 20);\n        this.radius = randomRange(5, 10);\n        this.vx =\n            typeof initialVelocityX === 'number'\n                ? randomRange(-initialVelocityX, initialVelocityX)\n                : randomRange(initialVelocityX.min, initialVelocityX.max);\n        this.vy =\n            typeof initialVelocityY === 'number'\n                ? randomRange(-initialVelocityY, 0)\n                : randomRange(initialVelocityY.min, initialVelocityY.max);\n        this.shape = randomInt(0, 2);\n        this.angle = degreesToRads(randomRange(0, 360));\n        this.angularSpin = randomRange(-0.2, 0.2);\n        this.color = colors[Math.floor(Math.random() * colors.length)];\n        this.rotateY = randomRange(0, 1);\n        this.rotationDirection = randomRange(0, 1)\n            ? RotationDirection.Positive\n            : RotationDirection.Negative;\n    }\n    update(elapsed) {\n        const { gravity, wind, friction, opacity, drawShape } = this.getOptions();\n        const frameTimeMultiplier = elapsed / DEFAULT_FRAME_TIME;\n        this.x += this.vx * frameTimeMultiplier;\n        this.y += this.vy * frameTimeMultiplier;\n        this.vy += gravity * frameTimeMultiplier;\n        this.vx += wind * frameTimeMultiplier;\n        this.vx *= friction ** frameTimeMultiplier;\n        this.vy *= friction ** frameTimeMultiplier;\n        if (this.rotateY >= 1 &&\n            this.rotationDirection === RotationDirection.Positive) {\n            this.rotationDirection = RotationDirection.Negative;\n        }\n        else if (this.rotateY <= -1 &&\n            this.rotationDirection === RotationDirection.Negative) {\n            this.rotationDirection = RotationDirection.Positive;\n        }\n        const rotateDelta = 0.1 * this.rotationDirection * frameTimeMultiplier;\n        this.rotateY += rotateDelta;\n        this.angle += this.angularSpin;\n        this.context.save();\n        this.context.translate(this.x, this.y);\n        this.context.rotate(this.angle);\n        this.context.scale(1, this.rotateY);\n        this.context.rotate(this.angle);\n        this.context.beginPath();\n        this.context.fillStyle = this.color;\n        this.context.strokeStyle = this.color;\n        this.context.globalAlpha = opacity;\n        this.context.lineCap = 'round';\n        this.context.lineWidth = 2;\n        if (drawShape && typeof drawShape === 'function') {\n            drawShape.call(this, this.context);\n        }\n        else {\n            switch (this.shape) {\n                case ParticleShape.Circle: {\n                    this.context.beginPath();\n                    this.context.arc(0, 0, this.radius, 0, 2 * Math.PI);\n                    this.context.fill();\n                    break;\n                }\n                case ParticleShape.Square: {\n                    this.context.fillRect(-this.w / 2, -this.h / 2, this.w, this.h);\n                    break;\n                }\n                case ParticleShape.Strip: {\n                    this.context.fillRect(-this.w / 6, -this.h / 2, this.w / 3, this.h);\n                    break;\n                }\n            }\n        }\n        this.context.closePath();\n        this.context.restore();\n    }\n}\n\nclass ParticleGenerator {\n    constructor(canvas, getOptions) {\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n        this.lastNumberOfPieces = 0;\n        this.tweenProgress = 0;\n        this.tweenFrom = 0;\n        this.particles = [];\n        this.particlesGenerated = 0;\n        this.removeParticleAt = (i) => {\n            this.particles.splice(i, 1);\n        };\n        this.getParticle = () => {\n            const newParticleX = randomRange(this.x, this.w + this.x);\n            const newParticleY = randomRange(this.y, this.h + this.y);\n            return new Particle(this.context, this.getOptions, newParticleX, newParticleY);\n        };\n        this.animate = (elapsed) => {\n            const { canvas, context, particlesGenerated, lastNumberOfPieces } = this;\n            const { run, recycle, numberOfPieces, debug, tweenFunction, tweenDuration, } = this.getOptions();\n            if (!run) {\n                return false;\n            }\n            const nP = this.particles.length;\n            const activeCount = recycle ? nP : particlesGenerated;\n            // Initial population\n            if (activeCount < numberOfPieces) {\n                // Use the numberOfPieces prop as a key to reset the easing timing\n                if (lastNumberOfPieces !== numberOfPieces) {\n                    this.tweenProgress = 0;\n                    this.tweenFrom = activeCount;\n                    this.lastNumberOfPieces = numberOfPieces;\n                }\n                // Clamp tweenProgress between 0 and tweenDuration\n                this.tweenProgress = Math.min(tweenDuration, Math.max(0, this.tweenProgress + elapsed));\n                const tweenedVal = tweenFunction(this.tweenProgress, this.tweenFrom, numberOfPieces, tweenDuration);\n                const numToAdd = Math.round(tweenedVal - activeCount);\n                for (let i = 0; i < numToAdd; i++) {\n                    this.particles.push(this.getParticle());\n                }\n                this.particlesGenerated += numToAdd;\n            }\n            if (debug) {\n                // Draw debug text\n                context.font = '12px sans-serif';\n                context.fillStyle = '#333';\n                context.textAlign = 'right';\n                context.fillText(`Particles: ${nP}`, canvas.width - 10, canvas.height - 20);\n            }\n            // Maintain the population, iterating backwards to prevent issues when removing particles\n            for (let i = this.particles.length - 1; i >= 0; i--) {\n                const p = this.particles[i];\n                // Update each particle's position\n                p.update(elapsed);\n                // Prune the off-canvas particles\n                if (p.y > canvas.height ||\n                    p.y < -100 ||\n                    p.x > canvas.width + 100 ||\n                    p.x < -100) {\n                    if (recycle && activeCount <= numberOfPieces) {\n                        // Replace the particle with a brand new one\n                        this.particles[i] = this.getParticle();\n                    }\n                    else {\n                        this.removeParticleAt(i);\n                    }\n                }\n            }\n            return nP > 0 || activeCount < numberOfPieces;\n        };\n        this.canvas = canvas;\n        const ctx = this.canvas.getContext('2d');\n        if (!ctx) {\n            throw new Error('Could not get canvas context');\n        }\n        this.context = ctx;\n        this.getOptions = getOptions;\n    }\n}\n\nconst confettiDefaults = {\n    width: typeof window !== 'undefined' ? window.innerWidth : 300,\n    height: typeof window !== 'undefined' ? window.innerHeight : 200,\n    numberOfPieces: 200,\n    friction: 0.99,\n    wind: 0,\n    gravity: 0.1,\n    initialVelocityX: 4,\n    initialVelocityY: 10,\n    colors: [\n        '#f44336',\n        '#e91e63',\n        '#9c27b0',\n        '#673ab7',\n        '#3f51b5',\n        '#2196f3',\n        '#03a9f4',\n        '#00bcd4',\n        '#009688',\n        '#4CAF50',\n        '#8BC34A',\n        '#CDDC39',\n        '#FFEB3B',\n        '#FFC107',\n        '#FF9800',\n        '#FF5722',\n        '#795548',\n    ],\n    opacity: 1.0,\n    debug: false,\n    tweenFunction: tween_functions__WEBPACK_IMPORTED_MODULE_2__.easeInOutQuad,\n    tweenDuration: 5000,\n    recycle: true,\n    run: true,\n};\nclass Confetti {\n    constructor(canvas, opts) {\n        this.lastFrameTime = 0;\n        this.setOptionsWithDefaults = (opts) => {\n            const computedConfettiDefaults = {\n                confettiSource: {\n                    x: 0,\n                    y: 0,\n                    w: this.canvas.width,\n                    h: 0,\n                },\n            };\n            this._options = {\n                ...computedConfettiDefaults,\n                ...confettiDefaults,\n                ...opts,\n            };\n            Object.assign(this, opts.confettiSource);\n        };\n        this.update = (timestamp = 0) => {\n            const { options: { run, onConfettiComplete, frameRate }, canvas, context, } = this;\n            // Cap elapsed time to 50ms to prevent large time steps\n            const elapsed = Math.min(timestamp - this.lastFrameTime, 50);\n            // Throttle the frame rate if set\n            if (frameRate && elapsed < 1000 / frameRate) {\n                this.rafId = requestAnimationFrame(this.update);\n                return;\n            }\n            this.lastFrameTime = timestamp - (frameRate ? elapsed % frameRate : 0);\n            if (run) {\n                context.fillStyle = 'white';\n                context.clearRect(0, 0, canvas.width, canvas.height);\n            }\n            if (this.generator.animate(elapsed)) {\n                this.rafId = requestAnimationFrame(this.update);\n            }\n            else {\n                if (onConfettiComplete &&\n                    typeof onConfettiComplete === 'function' &&\n                    this.generator.particlesGenerated > 0) {\n                    onConfettiComplete.call(this, this);\n                }\n                this._options.run = false;\n            }\n        };\n        this.reset = () => {\n            if (this.generator && this.generator.particlesGenerated > 0) {\n                this.generator.particlesGenerated = 0;\n                this.generator.particles = [];\n                this.generator.lastNumberOfPieces = 0;\n            }\n        };\n        this.stop = () => {\n            this.options = { run: false };\n            if (this.rafId) {\n                cancelAnimationFrame(this.rafId);\n                this.rafId = undefined;\n            }\n        };\n        this.canvas = canvas;\n        const ctx = this.canvas.getContext('2d');\n        if (!ctx) {\n            throw new Error('Could not get canvas context');\n        }\n        this.context = ctx;\n        this.generator = new ParticleGenerator(this.canvas, () => this.options);\n        this.options = opts;\n        this.update();\n    }\n    get options() {\n        return this._options;\n    }\n    set options(opts) {\n        const lastRunState = this._options?.run;\n        const lastRecycleState = this._options?.recycle;\n        this.setOptionsWithDefaults(opts);\n        if (this.generator) {\n            Object.assign(this.generator, this.options.confettiSource);\n            if (typeof opts.recycle === 'boolean' &&\n                opts.recycle &&\n                lastRecycleState === false) {\n                this.generator.lastNumberOfPieces = this.generator.particles.length;\n            }\n        }\n        if (typeof opts.run === 'boolean' && opts.run && lastRunState === false) {\n            this.update();\n        }\n    }\n}\n\nconst ref = react__WEBPACK_IMPORTED_MODULE_1__.createRef();\nclass ReactConfettiInternal extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = react__WEBPACK_IMPORTED_MODULE_1__.createRef();\n        this.canvas = props.canvasRef || ref;\n    }\n    componentDidMount() {\n        if (this.canvas.current) {\n            const opts = extractCanvasProps(this.props)[0];\n            this.confetti = new Confetti(this.canvas.current, opts);\n        }\n    }\n    componentDidUpdate() {\n        const confettiOptions = extractCanvasProps(this.props)[0];\n        if (this.confetti) {\n            this.confetti.options = confettiOptions;\n        }\n    }\n    componentWillUnmount() {\n        if (this.confetti) {\n            this.confetti.stop();\n        }\n        this.confetti = undefined;\n    }\n    render() {\n        const [confettiOptions, passedProps] = extractCanvasProps(this.props);\n        const canvasStyles = {\n            zIndex: 2,\n            position: 'absolute',\n            pointerEvents: 'none',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            ...passedProps.style,\n        };\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"canvas\", { width: confettiOptions.width, height: confettiOptions.height, ref: this.canvas, ...passedProps, style: canvasStyles }));\n    }\n}\nReactConfettiInternal.defaultProps = {\n    ...confettiDefaults,\n};\nReactConfettiInternal.displayName = 'ReactConfetti';\nfunction extractCanvasProps(props) {\n    const confettiOptions = {};\n    const refs = {};\n    const rest = {};\n    const confettiOptionKeys = [\n        ...Object.keys(confettiDefaults),\n        'confettiSource',\n        'drawShape',\n        'onConfettiComplete',\n        'frameRate',\n    ];\n    const refProps = ['canvasRef'];\n    for (const prop in props) {\n        const val = props[prop];\n        if (confettiOptionKeys.includes(prop)) {\n            confettiOptions[prop] = val;\n        }\n        else if (refProps.includes(prop)) {\n            refProps[prop] = val;\n        }\n        else {\n            rest[prop] = val;\n        }\n    }\n    return [confettiOptions, rest, refs];\n}\nconst ReactConfetti = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ReactConfettiInternal, { canvasRef: ref, ...props }));\n\n\n//# sourceMappingURL=react-confetti.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1jb25mZXR0aS9kaXN0L3JlYWN0LWNvbmZldHRpLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdDO0FBQ2Q7QUFDZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0M7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2Q0FBNkM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhDQUE4QztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwwREFBMEQ7QUFDOUUsb0JBQW9CLHFFQUFxRTtBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGNBQWM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLEdBQUc7QUFDbEQ7QUFDQTtBQUNBLG9EQUFvRCxRQUFRO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwwREFBb0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsV0FBVyxvQ0FBb0MscUJBQXFCO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLDRDQUFlO0FBQzNCLG9DQUFvQyw0Q0FBZTtBQUNuRDtBQUNBO0FBQ0Esc0JBQXNCLDRDQUFlO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isc0RBQUcsYUFBYSxxSEFBcUg7QUFDcko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw2Q0FBZ0IsaUJBQWlCLHNEQUFHLDBCQUEwQiwwQkFBMEI7O0FBRTFFO0FBQ3BDIiwic291cmNlcyI6WyJEOlxcYmluZ28tY3BcXGJpbmdvLWNwXFxiaW5nby1jcFxcbm9kZV9tb2R1bGVzXFxyZWFjdC1jb25mZXR0aVxcZGlzdFxccmVhY3QtY29uZmV0dGkubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCB9IGZyb20gJ3JlYWN0L2pzeC1ydW50aW1lJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyB0d2VlbnMgZnJvbSAndHdlZW4tZnVuY3Rpb25zJztcblxuZnVuY3Rpb24gZGVncmVlc1RvUmFkcyhkZWdyZWVzKSB7XG4gICAgcmV0dXJuIChkZWdyZWVzICogTWF0aC5QSSkgLyAxODA7XG59XG5mdW5jdGlvbiByYW5kb21SYW5nZShtaW4sIG1heCkge1xuICAgIHJldHVybiBtaW4gKyBNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbik7XG59XG5mdW5jdGlvbiByYW5kb21JbnQobWluLCBtYXgpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihtaW4gKyBNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKTtcbn1cblxudmFyIFBhcnRpY2xlU2hhcGU7XG4oZnVuY3Rpb24gKFBhcnRpY2xlU2hhcGUpIHtcbiAgICBQYXJ0aWNsZVNoYXBlW1BhcnRpY2xlU2hhcGVbXCJDaXJjbGVcIl0gPSAwXSA9IFwiQ2lyY2xlXCI7XG4gICAgUGFydGljbGVTaGFwZVtQYXJ0aWNsZVNoYXBlW1wiU3F1YXJlXCJdID0gMV0gPSBcIlNxdWFyZVwiO1xuICAgIFBhcnRpY2xlU2hhcGVbUGFydGljbGVTaGFwZVtcIlN0cmlwXCJdID0gMl0gPSBcIlN0cmlwXCI7XG59KShQYXJ0aWNsZVNoYXBlIHx8IChQYXJ0aWNsZVNoYXBlID0ge30pKTtcbnZhciBSb3RhdGlvbkRpcmVjdGlvbjtcbihmdW5jdGlvbiAoUm90YXRpb25EaXJlY3Rpb24pIHtcbiAgICBSb3RhdGlvbkRpcmVjdGlvbltSb3RhdGlvbkRpcmVjdGlvbltcIlBvc2l0aXZlXCJdID0gMV0gPSBcIlBvc2l0aXZlXCI7XG4gICAgUm90YXRpb25EaXJlY3Rpb25bUm90YXRpb25EaXJlY3Rpb25bXCJOZWdhdGl2ZVwiXSA9IC0xXSA9IFwiTmVnYXRpdmVcIjtcbn0pKFJvdGF0aW9uRGlyZWN0aW9uIHx8IChSb3RhdGlvbkRpcmVjdGlvbiA9IHt9KSk7XG5jb25zdCBERUZBVUxUX0ZSQU1FX1RJTUUgPSAxMDAwIC8gNjA7XG5jbGFzcyBQYXJ0aWNsZSB7XG4gICAgY29uc3RydWN0b3IoY29udGV4dCwgZ2V0T3B0aW9ucywgeCwgeSkge1xuICAgICAgICB0aGlzLmdldE9wdGlvbnMgPSBnZXRPcHRpb25zO1xuICAgICAgICBjb25zdCB7IGNvbG9ycywgaW5pdGlhbFZlbG9jaXR5WCwgaW5pdGlhbFZlbG9jaXR5WSB9ID0gdGhpcy5nZXRPcHRpb25zKCk7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMudyA9IHJhbmRvbVJhbmdlKDUsIDIwKTtcbiAgICAgICAgdGhpcy5oID0gcmFuZG9tUmFuZ2UoNSwgMjApO1xuICAgICAgICB0aGlzLnJhZGl1cyA9IHJhbmRvbVJhbmdlKDUsIDEwKTtcbiAgICAgICAgdGhpcy52eCA9XG4gICAgICAgICAgICB0eXBlb2YgaW5pdGlhbFZlbG9jaXR5WCA9PT0gJ251bWJlcidcbiAgICAgICAgICAgICAgICA/IHJhbmRvbVJhbmdlKC1pbml0aWFsVmVsb2NpdHlYLCBpbml0aWFsVmVsb2NpdHlYKVxuICAgICAgICAgICAgICAgIDogcmFuZG9tUmFuZ2UoaW5pdGlhbFZlbG9jaXR5WC5taW4sIGluaXRpYWxWZWxvY2l0eVgubWF4KTtcbiAgICAgICAgdGhpcy52eSA9XG4gICAgICAgICAgICB0eXBlb2YgaW5pdGlhbFZlbG9jaXR5WSA9PT0gJ251bWJlcidcbiAgICAgICAgICAgICAgICA/IHJhbmRvbVJhbmdlKC1pbml0aWFsVmVsb2NpdHlZLCAwKVxuICAgICAgICAgICAgICAgIDogcmFuZG9tUmFuZ2UoaW5pdGlhbFZlbG9jaXR5WS5taW4sIGluaXRpYWxWZWxvY2l0eVkubWF4KTtcbiAgICAgICAgdGhpcy5zaGFwZSA9IHJhbmRvbUludCgwLCAyKTtcbiAgICAgICAgdGhpcy5hbmdsZSA9IGRlZ3JlZXNUb1JhZHMocmFuZG9tUmFuZ2UoMCwgMzYwKSk7XG4gICAgICAgIHRoaXMuYW5ndWxhclNwaW4gPSByYW5kb21SYW5nZSgtMC4yLCAwLjIpO1xuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3JzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNvbG9ycy5sZW5ndGgpXTtcbiAgICAgICAgdGhpcy5yb3RhdGVZID0gcmFuZG9tUmFuZ2UoMCwgMSk7XG4gICAgICAgIHRoaXMucm90YXRpb25EaXJlY3Rpb24gPSByYW5kb21SYW5nZSgwLCAxKVxuICAgICAgICAgICAgPyBSb3RhdGlvbkRpcmVjdGlvbi5Qb3NpdGl2ZVxuICAgICAgICAgICAgOiBSb3RhdGlvbkRpcmVjdGlvbi5OZWdhdGl2ZTtcbiAgICB9XG4gICAgdXBkYXRlKGVsYXBzZWQpIHtcbiAgICAgICAgY29uc3QgeyBncmF2aXR5LCB3aW5kLCBmcmljdGlvbiwgb3BhY2l0eSwgZHJhd1NoYXBlIH0gPSB0aGlzLmdldE9wdGlvbnMoKTtcbiAgICAgICAgY29uc3QgZnJhbWVUaW1lTXVsdGlwbGllciA9IGVsYXBzZWQgLyBERUZBVUxUX0ZSQU1FX1RJTUU7XG4gICAgICAgIHRoaXMueCArPSB0aGlzLnZ4ICogZnJhbWVUaW1lTXVsdGlwbGllcjtcbiAgICAgICAgdGhpcy55ICs9IHRoaXMudnkgKiBmcmFtZVRpbWVNdWx0aXBsaWVyO1xuICAgICAgICB0aGlzLnZ5ICs9IGdyYXZpdHkgKiBmcmFtZVRpbWVNdWx0aXBsaWVyO1xuICAgICAgICB0aGlzLnZ4ICs9IHdpbmQgKiBmcmFtZVRpbWVNdWx0aXBsaWVyO1xuICAgICAgICB0aGlzLnZ4ICo9IGZyaWN0aW9uICoqIGZyYW1lVGltZU11bHRpcGxpZXI7XG4gICAgICAgIHRoaXMudnkgKj0gZnJpY3Rpb24gKiogZnJhbWVUaW1lTXVsdGlwbGllcjtcbiAgICAgICAgaWYgKHRoaXMucm90YXRlWSA+PSAxICYmXG4gICAgICAgICAgICB0aGlzLnJvdGF0aW9uRGlyZWN0aW9uID09PSBSb3RhdGlvbkRpcmVjdGlvbi5Qb3NpdGl2ZSkge1xuICAgICAgICAgICAgdGhpcy5yb3RhdGlvbkRpcmVjdGlvbiA9IFJvdGF0aW9uRGlyZWN0aW9uLk5lZ2F0aXZlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMucm90YXRlWSA8PSAtMSAmJlxuICAgICAgICAgICAgdGhpcy5yb3RhdGlvbkRpcmVjdGlvbiA9PT0gUm90YXRpb25EaXJlY3Rpb24uTmVnYXRpdmUpIHtcbiAgICAgICAgICAgIHRoaXMucm90YXRpb25EaXJlY3Rpb24gPSBSb3RhdGlvbkRpcmVjdGlvbi5Qb3NpdGl2ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByb3RhdGVEZWx0YSA9IDAuMSAqIHRoaXMucm90YXRpb25EaXJlY3Rpb24gKiBmcmFtZVRpbWVNdWx0aXBsaWVyO1xuICAgICAgICB0aGlzLnJvdGF0ZVkgKz0gcm90YXRlRGVsdGE7XG4gICAgICAgIHRoaXMuYW5nbGUgKz0gdGhpcy5hbmd1bGFyU3BpbjtcbiAgICAgICAgdGhpcy5jb250ZXh0LnNhdmUoKTtcbiAgICAgICAgdGhpcy5jb250ZXh0LnRyYW5zbGF0ZSh0aGlzLngsIHRoaXMueSk7XG4gICAgICAgIHRoaXMuY29udGV4dC5yb3RhdGUodGhpcy5hbmdsZSk7XG4gICAgICAgIHRoaXMuY29udGV4dC5zY2FsZSgxLCB0aGlzLnJvdGF0ZVkpO1xuICAgICAgICB0aGlzLmNvbnRleHQucm90YXRlKHRoaXMuYW5nbGUpO1xuICAgICAgICB0aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSB0aGlzLmNvbG9yO1xuICAgICAgICB0aGlzLmNvbnRleHQuc3Ryb2tlU3R5bGUgPSB0aGlzLmNvbG9yO1xuICAgICAgICB0aGlzLmNvbnRleHQuZ2xvYmFsQWxwaGEgPSBvcGFjaXR5O1xuICAgICAgICB0aGlzLmNvbnRleHQubGluZUNhcCA9ICdyb3VuZCc7XG4gICAgICAgIHRoaXMuY29udGV4dC5saW5lV2lkdGggPSAyO1xuICAgICAgICBpZiAoZHJhd1NoYXBlICYmIHR5cGVvZiBkcmF3U2hhcGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGRyYXdTaGFwZS5jYWxsKHRoaXMsIHRoaXMuY29udGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzd2l0Y2ggKHRoaXMuc2hhcGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnRpY2xlU2hhcGUuQ2lyY2xlOiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmFyYygwLCAwLCB0aGlzLnJhZGl1cywgMCwgMiAqIE1hdGguUEkpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbCgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBQYXJ0aWNsZVNoYXBlLlNxdWFyZToge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFJlY3QoLXRoaXMudyAvIDIsIC10aGlzLmggLyAyLCB0aGlzLncsIHRoaXMuaCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFBhcnRpY2xlU2hhcGUuU3RyaXA6IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KC10aGlzLncgLyA2LCAtdGhpcy5oIC8gMiwgdGhpcy53IC8gMywgdGhpcy5oKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgdGhpcy5jb250ZXh0LnJlc3RvcmUoKTtcbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2xlR2VuZXJhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYW52YXMsIGdldE9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy54ID0gMDtcbiAgICAgICAgdGhpcy55ID0gMDtcbiAgICAgICAgdGhpcy53ID0gMDtcbiAgICAgICAgdGhpcy5oID0gMDtcbiAgICAgICAgdGhpcy5sYXN0TnVtYmVyT2ZQaWVjZXMgPSAwO1xuICAgICAgICB0aGlzLnR3ZWVuUHJvZ3Jlc3MgPSAwO1xuICAgICAgICB0aGlzLnR3ZWVuRnJvbSA9IDA7XG4gICAgICAgIHRoaXMucGFydGljbGVzID0gW107XG4gICAgICAgIHRoaXMucGFydGljbGVzR2VuZXJhdGVkID0gMDtcbiAgICAgICAgdGhpcy5yZW1vdmVQYXJ0aWNsZUF0ID0gKGkpID0+IHtcbiAgICAgICAgICAgIHRoaXMucGFydGljbGVzLnNwbGljZShpLCAxKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5nZXRQYXJ0aWNsZSA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld1BhcnRpY2xlWCA9IHJhbmRvbVJhbmdlKHRoaXMueCwgdGhpcy53ICsgdGhpcy54KTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1BhcnRpY2xlWSA9IHJhbmRvbVJhbmdlKHRoaXMueSwgdGhpcy5oICsgdGhpcy55KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUGFydGljbGUodGhpcy5jb250ZXh0LCB0aGlzLmdldE9wdGlvbnMsIG5ld1BhcnRpY2xlWCwgbmV3UGFydGljbGVZKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5hbmltYXRlID0gKGVsYXBzZWQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgY2FudmFzLCBjb250ZXh0LCBwYXJ0aWNsZXNHZW5lcmF0ZWQsIGxhc3ROdW1iZXJPZlBpZWNlcyB9ID0gdGhpcztcbiAgICAgICAgICAgIGNvbnN0IHsgcnVuLCByZWN5Y2xlLCBudW1iZXJPZlBpZWNlcywgZGVidWcsIHR3ZWVuRnVuY3Rpb24sIHR3ZWVuRHVyYXRpb24sIH0gPSB0aGlzLmdldE9wdGlvbnMoKTtcbiAgICAgICAgICAgIGlmICghcnVuKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgblAgPSB0aGlzLnBhcnRpY2xlcy5sZW5ndGg7XG4gICAgICAgICAgICBjb25zdCBhY3RpdmVDb3VudCA9IHJlY3ljbGUgPyBuUCA6IHBhcnRpY2xlc0dlbmVyYXRlZDtcbiAgICAgICAgICAgIC8vIEluaXRpYWwgcG9wdWxhdGlvblxuICAgICAgICAgICAgaWYgKGFjdGl2ZUNvdW50IDwgbnVtYmVyT2ZQaWVjZXMpIHtcbiAgICAgICAgICAgICAgICAvLyBVc2UgdGhlIG51bWJlck9mUGllY2VzIHByb3AgYXMgYSBrZXkgdG8gcmVzZXQgdGhlIGVhc2luZyB0aW1pbmdcbiAgICAgICAgICAgICAgICBpZiAobGFzdE51bWJlck9mUGllY2VzICE9PSBudW1iZXJPZlBpZWNlcykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnR3ZWVuUHJvZ3Jlc3MgPSAwO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnR3ZWVuRnJvbSA9IGFjdGl2ZUNvdW50O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3ROdW1iZXJPZlBpZWNlcyA9IG51bWJlck9mUGllY2VzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBDbGFtcCB0d2VlblByb2dyZXNzIGJldHdlZW4gMCBhbmQgdHdlZW5EdXJhdGlvblxuICAgICAgICAgICAgICAgIHRoaXMudHdlZW5Qcm9ncmVzcyA9IE1hdGgubWluKHR3ZWVuRHVyYXRpb24sIE1hdGgubWF4KDAsIHRoaXMudHdlZW5Qcm9ncmVzcyArIGVsYXBzZWQpKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0d2VlbmVkVmFsID0gdHdlZW5GdW5jdGlvbih0aGlzLnR3ZWVuUHJvZ3Jlc3MsIHRoaXMudHdlZW5Gcm9tLCBudW1iZXJPZlBpZWNlcywgdHdlZW5EdXJhdGlvbik7XG4gICAgICAgICAgICAgICAgY29uc3QgbnVtVG9BZGQgPSBNYXRoLnJvdW5kKHR3ZWVuZWRWYWwgLSBhY3RpdmVDb3VudCk7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1Ub0FkZDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFydGljbGVzLnB1c2godGhpcy5nZXRQYXJ0aWNsZSgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZXNHZW5lcmF0ZWQgKz0gbnVtVG9BZGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGVidWcpIHtcbiAgICAgICAgICAgICAgICAvLyBEcmF3IGRlYnVnIHRleHRcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZvbnQgPSAnMTJweCBzYW5zLXNlcmlmJztcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9ICcjMzMzJztcbiAgICAgICAgICAgICAgICBjb250ZXh0LnRleHRBbGlnbiA9ICdyaWdodCc7XG4gICAgICAgICAgICAgICAgY29udGV4dC5maWxsVGV4dChgUGFydGljbGVzOiAke25QfWAsIGNhbnZhcy53aWR0aCAtIDEwLCBjYW52YXMuaGVpZ2h0IC0gMjApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gTWFpbnRhaW4gdGhlIHBvcHVsYXRpb24sIGl0ZXJhdGluZyBiYWNrd2FyZHMgdG8gcHJldmVudCBpc3N1ZXMgd2hlbiByZW1vdmluZyBwYXJ0aWNsZXNcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSB0aGlzLnBhcnRpY2xlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHAgPSB0aGlzLnBhcnRpY2xlc1tpXTtcbiAgICAgICAgICAgICAgICAvLyBVcGRhdGUgZWFjaCBwYXJ0aWNsZSdzIHBvc2l0aW9uXG4gICAgICAgICAgICAgICAgcC51cGRhdGUoZWxhcHNlZCk7XG4gICAgICAgICAgICAgICAgLy8gUHJ1bmUgdGhlIG9mZi1jYW52YXMgcGFydGljbGVzXG4gICAgICAgICAgICAgICAgaWYgKHAueSA+IGNhbnZhcy5oZWlnaHQgfHxcbiAgICAgICAgICAgICAgICAgICAgcC55IDwgLTEwMCB8fFxuICAgICAgICAgICAgICAgICAgICBwLnggPiBjYW52YXMud2lkdGggKyAxMDAgfHxcbiAgICAgICAgICAgICAgICAgICAgcC54IDwgLTEwMCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVjeWNsZSAmJiBhY3RpdmVDb3VudCA8PSBudW1iZXJPZlBpZWNlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVwbGFjZSB0aGUgcGFydGljbGUgd2l0aCBhIGJyYW5kIG5ldyBvbmVcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFydGljbGVzW2ldID0gdGhpcy5nZXRQYXJ0aWNsZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVQYXJ0aWNsZUF0KGkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5QID4gMCB8fCBhY3RpdmVDb3VudCA8IG51bWJlck9mUGllY2VzO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcbiAgICAgICAgY29uc3QgY3R4ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgaWYgKCFjdHgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IGdldCBjYW52YXMgY29udGV4dCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29udGV4dCA9IGN0eDtcbiAgICAgICAgdGhpcy5nZXRPcHRpb25zID0gZ2V0T3B0aW9ucztcbiAgICB9XG59XG5cbmNvbnN0IGNvbmZldHRpRGVmYXVsdHMgPSB7XG4gICAgd2lkdGg6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93LmlubmVyV2lkdGggOiAzMDAsXG4gICAgaGVpZ2h0OiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdy5pbm5lckhlaWdodCA6IDIwMCxcbiAgICBudW1iZXJPZlBpZWNlczogMjAwLFxuICAgIGZyaWN0aW9uOiAwLjk5LFxuICAgIHdpbmQ6IDAsXG4gICAgZ3Jhdml0eTogMC4xLFxuICAgIGluaXRpYWxWZWxvY2l0eVg6IDQsXG4gICAgaW5pdGlhbFZlbG9jaXR5WTogMTAsXG4gICAgY29sb3JzOiBbXG4gICAgICAgICcjZjQ0MzM2JyxcbiAgICAgICAgJyNlOTFlNjMnLFxuICAgICAgICAnIzljMjdiMCcsXG4gICAgICAgICcjNjczYWI3JyxcbiAgICAgICAgJyMzZjUxYjUnLFxuICAgICAgICAnIzIxOTZmMycsXG4gICAgICAgICcjMDNhOWY0JyxcbiAgICAgICAgJyMwMGJjZDQnLFxuICAgICAgICAnIzAwOTY4OCcsXG4gICAgICAgICcjNENBRjUwJyxcbiAgICAgICAgJyM4QkMzNEEnLFxuICAgICAgICAnI0NEREMzOScsXG4gICAgICAgICcjRkZFQjNCJyxcbiAgICAgICAgJyNGRkMxMDcnLFxuICAgICAgICAnI0ZGOTgwMCcsXG4gICAgICAgICcjRkY1NzIyJyxcbiAgICAgICAgJyM3OTU1NDgnLFxuICAgIF0sXG4gICAgb3BhY2l0eTogMS4wLFxuICAgIGRlYnVnOiBmYWxzZSxcbiAgICB0d2VlbkZ1bmN0aW9uOiB0d2VlbnMuZWFzZUluT3V0UXVhZCxcbiAgICB0d2VlbkR1cmF0aW9uOiA1MDAwLFxuICAgIHJlY3ljbGU6IHRydWUsXG4gICAgcnVuOiB0cnVlLFxufTtcbmNsYXNzIENvbmZldHRpIHtcbiAgICBjb25zdHJ1Y3RvcihjYW52YXMsIG9wdHMpIHtcbiAgICAgICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gMDtcbiAgICAgICAgdGhpcy5zZXRPcHRpb25zV2l0aERlZmF1bHRzID0gKG9wdHMpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbXB1dGVkQ29uZmV0dGlEZWZhdWx0cyA9IHtcbiAgICAgICAgICAgICAgICBjb25mZXR0aVNvdXJjZToge1xuICAgICAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgICAgICB5OiAwLFxuICAgICAgICAgICAgICAgICAgICB3OiB0aGlzLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgICAgICAgICAgaDogMCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuX29wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgLi4uY29tcHV0ZWRDb25mZXR0aURlZmF1bHRzLFxuICAgICAgICAgICAgICAgIC4uLmNvbmZldHRpRGVmYXVsdHMsXG4gICAgICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIG9wdHMuY29uZmV0dGlTb3VyY2UpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLnVwZGF0ZSA9ICh0aW1lc3RhbXAgPSAwKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IG9wdGlvbnM6IHsgcnVuLCBvbkNvbmZldHRpQ29tcGxldGUsIGZyYW1lUmF0ZSB9LCBjYW52YXMsIGNvbnRleHQsIH0gPSB0aGlzO1xuICAgICAgICAgICAgLy8gQ2FwIGVsYXBzZWQgdGltZSB0byA1MG1zIHRvIHByZXZlbnQgbGFyZ2UgdGltZSBzdGVwc1xuICAgICAgICAgICAgY29uc3QgZWxhcHNlZCA9IE1hdGgubWluKHRpbWVzdGFtcCAtIHRoaXMubGFzdEZyYW1lVGltZSwgNTApO1xuICAgICAgICAgICAgLy8gVGhyb3R0bGUgdGhlIGZyYW1lIHJhdGUgaWYgc2V0XG4gICAgICAgICAgICBpZiAoZnJhbWVSYXRlICYmIGVsYXBzZWQgPCAxMDAwIC8gZnJhbWVSYXRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yYWZJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gdGltZXN0YW1wIC0gKGZyYW1lUmF0ZSA/IGVsYXBzZWQgJSBmcmFtZVJhdGUgOiAwKTtcbiAgICAgICAgICAgIGlmIChydW4pIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9ICd3aGl0ZSc7XG4gICAgICAgICAgICAgICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmdlbmVyYXRvci5hbmltYXRlKGVsYXBzZWQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yYWZJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAob25Db25mZXR0aUNvbXBsZXRlICYmXG4gICAgICAgICAgICAgICAgICAgIHR5cGVvZiBvbkNvbmZldHRpQ29tcGxldGUgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0b3IucGFydGljbGVzR2VuZXJhdGVkID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBvbkNvbmZldHRpQ29tcGxldGUuY2FsbCh0aGlzLCB0aGlzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5fb3B0aW9ucy5ydW4gPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5yZXNldCA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmdlbmVyYXRvciAmJiB0aGlzLmdlbmVyYXRvci5wYXJ0aWNsZXNHZW5lcmF0ZWQgPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0b3IucGFydGljbGVzR2VuZXJhdGVkID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRvci5wYXJ0aWNsZXMgPSBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRvci5sYXN0TnVtYmVyT2ZQaWVjZXMgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnN0b3AgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMgPSB7IHJ1bjogZmFsc2UgfTtcbiAgICAgICAgICAgIGlmICh0aGlzLnJhZklkKSB7XG4gICAgICAgICAgICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5yYWZJZCk7XG4gICAgICAgICAgICAgICAgdGhpcy5yYWZJZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBjYW52YXM7XG4gICAgICAgIGNvbnN0IGN0eCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgIGlmICghY3R4KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCBnZXQgY2FudmFzIGNvbnRleHQnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjdHg7XG4gICAgICAgIHRoaXMuZ2VuZXJhdG9yID0gbmV3IFBhcnRpY2xlR2VuZXJhdG9yKHRoaXMuY2FudmFzLCAoKSA9PiB0aGlzLm9wdGlvbnMpO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRzO1xuICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgIH1cbiAgICBnZXQgb3B0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX29wdGlvbnM7XG4gICAgfVxuICAgIHNldCBvcHRpb25zKG9wdHMpIHtcbiAgICAgICAgY29uc3QgbGFzdFJ1blN0YXRlID0gdGhpcy5fb3B0aW9ucz8ucnVuO1xuICAgICAgICBjb25zdCBsYXN0UmVjeWNsZVN0YXRlID0gdGhpcy5fb3B0aW9ucz8ucmVjeWNsZTtcbiAgICAgICAgdGhpcy5zZXRPcHRpb25zV2l0aERlZmF1bHRzKG9wdHMpO1xuICAgICAgICBpZiAodGhpcy5nZW5lcmF0b3IpIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5nZW5lcmF0b3IsIHRoaXMub3B0aW9ucy5jb25mZXR0aVNvdXJjZSk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdHMucmVjeWNsZSA9PT0gJ2Jvb2xlYW4nICYmXG4gICAgICAgICAgICAgICAgb3B0cy5yZWN5Y2xlICYmXG4gICAgICAgICAgICAgICAgbGFzdFJlY3ljbGVTdGF0ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRvci5sYXN0TnVtYmVyT2ZQaWVjZXMgPSB0aGlzLmdlbmVyYXRvci5wYXJ0aWNsZXMubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2Ygb3B0cy5ydW4gPT09ICdib29sZWFuJyAmJiBvcHRzLnJ1biAmJiBsYXN0UnVuU3RhdGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5jb25zdCByZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcbmNsYXNzIFJlYWN0Q29uZmV0dGlJbnRlcm5hbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLmNhbnZhcyA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuICAgICAgICB0aGlzLmNhbnZhcyA9IHByb3BzLmNhbnZhc1JlZiB8fCByZWY7XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBpZiAodGhpcy5jYW52YXMuY3VycmVudCkge1xuICAgICAgICAgICAgY29uc3Qgb3B0cyA9IGV4dHJhY3RDYW52YXNQcm9wcyh0aGlzLnByb3BzKVswXTtcbiAgICAgICAgICAgIHRoaXMuY29uZmV0dGkgPSBuZXcgQ29uZmV0dGkodGhpcy5jYW52YXMuY3VycmVudCwgb3B0cyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgICAgICBjb25zdCBjb25mZXR0aU9wdGlvbnMgPSBleHRyYWN0Q2FudmFzUHJvcHModGhpcy5wcm9wcylbMF07XG4gICAgICAgIGlmICh0aGlzLmNvbmZldHRpKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZldHRpLm9wdGlvbnMgPSBjb25mZXR0aU9wdGlvbnM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbmZldHRpKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZldHRpLnN0b3AoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbmZldHRpID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IFtjb25mZXR0aU9wdGlvbnMsIHBhc3NlZFByb3BzXSA9IGV4dHJhY3RDYW52YXNQcm9wcyh0aGlzLnByb3BzKTtcbiAgICAgICAgY29uc3QgY2FudmFzU3R5bGVzID0ge1xuICAgICAgICAgICAgekluZGV4OiAyLFxuICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICAgICAgcmlnaHQ6IDAsXG4gICAgICAgICAgICAuLi5wYXNzZWRQcm9wcy5zdHlsZSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIChqc3goXCJjYW52YXNcIiwgeyB3aWR0aDogY29uZmV0dGlPcHRpb25zLndpZHRoLCBoZWlnaHQ6IGNvbmZldHRpT3B0aW9ucy5oZWlnaHQsIHJlZjogdGhpcy5jYW52YXMsIC4uLnBhc3NlZFByb3BzLCBzdHlsZTogY2FudmFzU3R5bGVzIH0pKTtcbiAgICB9XG59XG5SZWFjdENvbmZldHRpSW50ZXJuYWwuZGVmYXVsdFByb3BzID0ge1xuICAgIC4uLmNvbmZldHRpRGVmYXVsdHMsXG59O1xuUmVhY3RDb25mZXR0aUludGVybmFsLmRpc3BsYXlOYW1lID0gJ1JlYWN0Q29uZmV0dGknO1xuZnVuY3Rpb24gZXh0cmFjdENhbnZhc1Byb3BzKHByb3BzKSB7XG4gICAgY29uc3QgY29uZmV0dGlPcHRpb25zID0ge307XG4gICAgY29uc3QgcmVmcyA9IHt9O1xuICAgIGNvbnN0IHJlc3QgPSB7fTtcbiAgICBjb25zdCBjb25mZXR0aU9wdGlvbktleXMgPSBbXG4gICAgICAgIC4uLk9iamVjdC5rZXlzKGNvbmZldHRpRGVmYXVsdHMpLFxuICAgICAgICAnY29uZmV0dGlTb3VyY2UnLFxuICAgICAgICAnZHJhd1NoYXBlJyxcbiAgICAgICAgJ29uQ29uZmV0dGlDb21wbGV0ZScsXG4gICAgICAgICdmcmFtZVJhdGUnLFxuICAgIF07XG4gICAgY29uc3QgcmVmUHJvcHMgPSBbJ2NhbnZhc1JlZiddO1xuICAgIGZvciAoY29uc3QgcHJvcCBpbiBwcm9wcykge1xuICAgICAgICBjb25zdCB2YWwgPSBwcm9wc1twcm9wXTtcbiAgICAgICAgaWYgKGNvbmZldHRpT3B0aW9uS2V5cy5pbmNsdWRlcyhwcm9wKSkge1xuICAgICAgICAgICAgY29uZmV0dGlPcHRpb25zW3Byb3BdID0gdmFsO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJlZlByb3BzLmluY2x1ZGVzKHByb3ApKSB7XG4gICAgICAgICAgICByZWZQcm9wc1twcm9wXSA9IHZhbDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc3RbcHJvcF0gPSB2YWw7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFtjb25mZXR0aU9wdGlvbnMsIHJlc3QsIHJlZnNdO1xufVxuY29uc3QgUmVhY3RDb25mZXR0aSA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCByZWYpID0+IGpzeChSZWFjdENvbmZldHRpSW50ZXJuYWwsIHsgY2FudmFzUmVmOiByZWYsIC4uLnByb3BzIH0pKTtcblxuZXhwb3J0IHsgUmVhY3RDb25mZXR0aSBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1jb25mZXR0aS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-confetti/dist/react-confetti.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tween-functions/index.js":
/*!***********************************************!*\
  !*** ./node_modules/tween-functions/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\n// t: current time, b: beginning value, _c: final value, d: total duration\nvar tweenFunctions = {\n  linear: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * t / d + b;\n  },\n  easeInQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t + b;\n  },\n  easeOutQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * (t /= d) * (t - 2) + b;\n  },\n  easeInOutQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t + b;\n    } else {\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    }\n  },\n  easeInCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t + b;\n  },\n  easeOutCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  },\n  easeInOutCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * t + 2) + b;\n    }\n  },\n  easeInQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t * t + b;\n  },\n  easeOutQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  },\n  easeInOutQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t + b;\n    } else {\n      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n    }\n  },\n  easeInQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t * t * t + b;\n  },\n  easeOutQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  },\n  easeInOutQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n  },\n  easeInSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  },\n  easeOutSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  },\n  easeInOutSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  },\n  easeInExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;\n  },\n  easeOutExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;\n  },\n  easeInOutExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    if ((t /= d / 2) < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    } else {\n      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n  },\n  easeInCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  },\n  easeOutCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  },\n  easeInOutCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    } else {\n      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n  },\n  easeInElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n  },\n  easeOutElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n  },\n  easeInOutElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d / 2) === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    } else {\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n    }\n  },\n  easeInBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  },\n  easeOutBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  },\n  easeInOutBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    if ((t /= d / 2) < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    }\n  },\n  easeInBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    var v;\n    v = tweenFunctions.easeOutBounce(d - t, 0, c, d);\n    return c - v + b;\n  },\n  easeOutBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    } else {\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    }\n  },\n  easeInOutBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    var v;\n    if (t < d / 2) {\n      v = tweenFunctions.easeInBounce(t * 2, 0, c, d);\n      return v * 0.5 + b;\n    } else {\n      v = tweenFunctions.easeOutBounce(t * 2 - d, 0, c, d);\n      return v * 0.5 + c * 0.5 + b;\n    }\n  }\n};\n\nmodule.exports = tweenFunctions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tween-functions/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/Loading.tsx":
/*!*****************************!*\
  !*** ./src/app/Loading.tsx ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Loading)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction Loading() {\n    _s();\n    const [dots, setDots] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Loading.useEffect\": ()=>{\n            const interval = setInterval({\n                \"Loading.useEffect.interval\": ()=>{\n                    setDots({\n                        \"Loading.useEffect.interval\": (prev)=>prev.length < 3 ? prev + '.' : ''\n                    }[\"Loading.useEffect.interval\"]);\n                }\n            }[\"Loading.useEffect.interval\"], 500);\n            return ({\n                \"Loading.useEffect\": ()=>clearInterval(interval)\n            })[\"Loading.useEffect\"];\n        }\n    }[\"Loading.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            display: 'flex',\n            height: '40vh',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '2rem',\n            fontWeight: 'bold'\n        },\n        children: [\n            \"Loading problems\",\n            dots\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\Loading.tsx\",\n        lineNumber: 16,\n        columnNumber: 5\n    }, this);\n}\n_s(Loading, \"x5A7Sg53ZjAlz59b/ycs4VK0Y+g=\");\n_c = Loading;\nvar _c;\n$RefreshReg$(_c, \"Loading\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvTG9hZGluZy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRTRDO0FBRTdCLFNBQVNFOztJQUN0QixNQUFNLENBQUNDLE1BQU1DLFFBQVEsR0FBR0gsK0NBQVFBLENBQUM7SUFFakNELGdEQUFTQTs2QkFBQztZQUNSLE1BQU1LLFdBQVdDOzhDQUFZO29CQUMzQkY7c0RBQVEsQ0FBQ0csT0FBVUEsS0FBS0MsTUFBTSxHQUFHLElBQUlELE9BQU8sTUFBTTs7Z0JBQ3BEOzZDQUFHO1lBQ0g7cUNBQU8sSUFBTUUsY0FBY0o7O1FBQzdCOzRCQUFHLEVBQUU7SUFFTCxxQkFDRSw4REFBQ0s7UUFBSUMsT0FBTztZQUNWQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsWUFBWTtZQUNaQyxnQkFBZ0I7WUFDaEJDLFVBQVU7WUFDVkMsWUFBWTtRQUNkOztZQUFHO1lBQ2dCZDs7Ozs7OztBQUd2QjtHQXRCd0JEO0tBQUFBIiwic291cmNlcyI6WyJEOlxcYmluZ28tY3BcXGJpbmdvLWNwXFxiaW5nby1jcFxcc3JjXFxhcHBcXExvYWRpbmcudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9hZGluZygpIHtcbiAgY29uc3QgW2RvdHMsIHNldERvdHNdID0gdXNlU3RhdGUoJycpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICBzZXREb3RzKChwcmV2KSA9PiAocHJldi5sZW5ndGggPCAzID8gcHJldiArICcuJyA6ICcnKSk7XG4gICAgfSwgNTAwKTtcbiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGhlaWdodDogJzQwdmgnLFxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICBmb250U2l6ZTogJzJyZW0nLFxuICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIH19PlxuICAgICAgTG9hZGluZyBwcm9ibGVtc3tkb3RzfVxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiTG9hZGluZyIsImRvdHMiLCJzZXREb3RzIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsInByZXYiLCJsZW5ndGgiLCJjbGVhckludGVydmFsIiwiZGl2Iiwic3R5bGUiLCJkaXNwbGF5IiwiaGVpZ2h0IiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZm9udFNpemUiLCJmb250V2VpZ2h0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/Loading.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/match/[id]/page.tsx":
/*!*************************************!*\
  !*** ./src/app/match/[id]/page.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _Loading__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Loading */ \"(app-pages-browser)/./src/app/Loading.tsx\");\n/* harmony import */ var react_confetti__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-confetti */ \"(app-pages-browser)/./node_modules/react-confetti/dist/react-confetti.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n // add to top imports if not present\nconst teamColors = {\n    red: 'bg-red-500',\n    blue: 'bg-blue-500',\n    green: 'bg-green-500',\n    purple: 'bg-purple-500',\n    orange: 'bg-orange-500',\n    pink: 'bg-pink-500',\n    yellow: 'bg-yellow-500',\n    teal: 'bg-teal-500'\n};\nconst links = {\n    \"Home\": 'http://localhost:3000/home',\n    \"ICPC Mode\": 'http://localhost:3000/create-match',\n    \"IOI Mode\": 'http://localhost:3000/oi_mode',\n    \"Help\": 'http://localhost:3000/help'\n};\nconst gridClasses = {\n    3: \"grid-cols-3 gap-x-0 gap-y-4 justify-items-center mt-4 mx-130\",\n    4: \"grid-cols-4 gap-x-0 gap-y-4 justify-items-center mt-4 mx-110\",\n    5: \"grid-cols-5 gap-x-0 gap-y-4 justify-items-center mt-4 mx-90\",\n    6: \"grid-cols-6 gap-x-0 gap-y-4 justify-items-center mt-4 mx-70\"\n};\n// small local hook, avoids react-use dependency\nfunction useWindowSize() {\n    _s();\n    const isClient = \"object\" !== 'undefined';\n    const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: isClient ? window.innerWidth : 0,\n        height: isClient ? window.innerHeight : 0\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useWindowSize.useEffect\": ()=>{\n            if (!isClient) return;\n            function onResize() {\n                setSize({\n                    width: window.innerWidth,\n                    height: window.innerHeight\n                });\n            }\n            window.addEventListener('resize', onResize);\n            onResize();\n            return ({\n                \"useWindowSize.useEffect\": ()=>window.removeEventListener('resize', onResize)\n            })[\"useWindowSize.useEffect\"];\n        }\n    }[\"useWindowSize.useEffect\"], [\n        isClient\n    ]);\n    return size;\n}\n_s(useWindowSize, \"EHsdXo7pyf9gX725TsIkXVc9MjA=\");\nfunction notifyBrowser(title, body) {\n    // Request permission if needed\n    if ( false || !('Notification' in window)) return;\n    if (Notification.permission === 'granted') {\n        try {\n            new Notification(title, {\n                body\n            });\n        } catch (e) {}\n        return;\n    }\n    if (Notification.permission !== 'denied') {\n        Notification.requestPermission().then((permission)=>{\n            if (permission === 'granted') {\n                try {\n                    new Notification(title, {\n                        body\n                    });\n                } catch (e) {}\n            }\n        });\n    }\n}\n// normalize/dedupe server problems: prefer position, fall back to contestId-index\nfunction normalizeProblemsFromServer(raw) {\n    if (!Array.isArray(raw)) return [];\n    // keep only active (defensive)\n    const active = raw.filter((p)=>p && p.active !== false);\n    // If problems have `position`, use a Map keyed by position (keeps slot count stable)\n    const hasPosition = active.every((p)=>typeof p.position === 'number');\n    if (hasPosition) {\n        const byPos = new Map();\n        for (const p of active){\n            const pos = p.position;\n            // if duplicates for same position exist, keep the first one (server should avoid this)\n            if (!byPos.has(pos)) byPos.set(pos, p);\n        // optionally: if you want newest: always overwrite byPos.set(pos, p)\n        }\n        // Create array ordered by position (fill gaps if you want with nulls — we sort)\n        return Array.from(byPos.entries()).sort((a, b)=>a[0] - b[0]).map((param)=>{\n            let [_, p] = param;\n            return p;\n        });\n    }\n    // Fallback: dedupe by contestId-index key and preserve server order\n    const seen = new Set();\n    const result = [];\n    for (const p of active){\n        const key = \"\".concat(p.contestId, \"-\").concat(p.index);\n        if (!seen.has(key)) {\n            seen.add(key);\n            result.push(p);\n        }\n    }\n    return result;\n}\nfunction Home() {\n    _s1();\n    var _s = $RefreshSig$();\n    const params = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useParams)();\n    const rawId = params === null || params === void 0 ? void 0 : params.id;\n    const id = Array.isArray(rawId) ? rawId[0] : rawId; // id is now string | undefined\n    // const [isDarkMode, setIsDarkMode] = useState(false);\n    const [showLog, setShowLog] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [currentTeam, setCurrentTeam] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [problems, setProblems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [gridSize, setgridSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(5);\n    const [solved, setSolved] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [log, setLog] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [match, setMatch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [now, setNow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Date());\n    // win / lock / confetti state\n    const [winner, setWinner] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [matchLocked, setMatchLocked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // prevents further marking/polling after win\n    const [confettiActive, setConfettiActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [positionOwners, setPositionOwners] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    // window size (use the local hook)\n    const { width, height } = useWindowSize();\n    //   const [activeTab, setActiveTab] = useState(\"Home\");\n    const notifiedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Set());\n    function persistNotified(matchId) {\n        const key = \"notified_\".concat(matchId);\n        try {\n            localStorage.setItem(key, JSON.stringify(Array.from(notifiedRef.current)));\n        } catch (e) {}\n    }\n    // restore from localStorage when match loads (once per match)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            if (!(match === null || match === void 0 ? void 0 : match.id)) return;\n            const key = \"notified_\".concat(match.id);\n            const raw = localStorage.getItem(key);\n            try {\n                const arr = raw ? JSON.parse(raw) : [];\n                notifiedRef.current = new Set(arr);\n            } catch (e) {\n                notifiedRef.current = new Set();\n            }\n        }\n    }[\"Home.useEffect\"], [\n        match === null || match === void 0 ? void 0 : match.id\n    ]);\n    // --- Fetch match by id on mount / when id changes ---\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            if (!id) return;\n            setLoading(true);\n            const fetchMatch = {\n                \"Home.useEffect.fetchMatch\": async ()=>{\n                    try {\n                        const res = await fetch(\"/api/getMatch?matchId=\".concat(encodeURIComponent(id)));\n                        if (!res.ok) {\n                            console.error('Failed to fetch match', await res.text());\n                            setMatch(null);\n                            setLoading(false);\n                            return;\n                        }\n                        const data = await res.json();\n                        var _data_match;\n                        // If your API returns { match } use data.match, otherwise data (adjust if needed)\n                        const matchObj = (_data_match = data.match) !== null && _data_match !== void 0 ? _data_match : data;\n                        setMatch(matchObj);\n                        // Build solved map + log from returned match's solveLog (so page shows final results if match already ended)\n                        try {\n                            const solvedMap = {};\n                            const newLogEntries = [];\n                            const posOwners = {};\n                            var _matchObj_teams;\n                            // console.log(\"FSS: \", matchObj.teams);\n                            const teamsFromServer = (_matchObj_teams = matchObj.teams) !== null && _matchObj_teams !== void 0 ? _matchObj_teams : [];\n                            var // console.log(\"mys: \", matchObj.solveLog);\n                            _matchObj_solveLog;\n                            ((_matchObj_solveLog = matchObj.solveLog) !== null && _matchObj_solveLog !== void 0 ? _matchObj_solveLog : []).forEach({\n                                \"Home.useEffect.fetchMatch\": (entry)=>{\n                                    var _entry_problem;\n                                    const key = \"\".concat(entry.contestId, \"-\").concat(entry.index);\n                                    const { displayName, teamKey } = resolveTeamDisplayAndKey(entry.team, teamsFromServer);\n                                    solvedMap[entry.problem.position] = {\n                                        team: teamKey\n                                    };\n                                    // If solveLog includes the problem relation and it has a position, map position -> owner\n                                    if (entry.problem && typeof entry.problem.position === 'number') {\n                                        posOwners[entry.problem.position] = teamKey;\n                                    }\n                                    var _entry_problem_name;\n                                    // use problem name if included by API, otherwise fall back to index\n                                    const problemName = (_entry_problem_name = (_entry_problem = entry.problem) === null || _entry_problem === void 0 ? void 0 : _entry_problem.name) !== null && _entry_problem_name !== void 0 ? _entry_problem_name : \"Problem \".concat(entry.index);\n                                    const contestAndIndex = \"\".concat(entry.contestId).concat(entry.index);\n                                    newLogEntries.push({\n                                        key,\n                                        message: \"\".concat(displayName, \" solved \").concat(problemName, \" (\").concat(contestAndIndex, \")\"),\n                                        team: teamKey\n                                    });\n                                // newLogEntries.push({\n                                // message: `${entry.team} solved ${problemName} (${contestAndIndex})`,\n                                // team: entry.team.toLowerCase(),\n                                // });\n                                }\n                            }[\"Home.useEffect.fetchMatch\"]);\n                            // console.log(\"MS: \", solvedMap);\n                            setPositionOwners(posOwners); // <-- set state\n                            // merge with any existing log (keep newest first) but avoid duplicates\n                            setLog({\n                                \"Home.useEffect.fetchMatch\": (prev)=>{\n                                    const combined = [\n                                        ...newLogEntries,\n                                        ...prev\n                                    ];\n                                    const uniqueMap = new Map();\n                                    for (const e of combined){\n                                        if (!uniqueMap.has(e.key)) uniqueMap.set(e.key, e);\n                                    }\n                                    return Array.from(uniqueMap.values()).slice(0, 10);\n                                }\n                            }[\"Home.useEffect.fetchMatch\"]);\n                            setSolved(solvedMap);\n                        // AFTER setLog(...) inside the initial fetch try block:\n                        // if (matchObj?.id) {\n                        //   // Mark initial historic messages as notified so new tab won't re-notify them\n                        //   newLogEntries.forEach(ne => notifiedRef.current.add(ne.message));\n                        //   persistNotified(matchObj.id);\n                        // }\n                        } catch (e) {\n                            // don't crash if shape is unexpected\n                            console.warn('Could not build solved/log from matchObj.solveLog', e);\n                        }\n                    } catch (err) {\n                        console.error('Error fetching match', err);\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"Home.useEffect.fetchMatch\"];\n            fetchMatch();\n        }\n    }[\"Home.useEffect\"], [\n        id\n    ]);\n    // helper to map an entry.team (which might be color or name) to displayName and color key\n    // helper to map an entry.team (which might be color or name) to displayName and color key\n    // helper to map an entry.team (which might be color or name) to displayName and color key\n    function resolveTeamDisplayAndKey(teamIdentifier, teamsListParam) {\n        var _match_teams;\n        // prefer explicit list passed in; fallback to current match state\n        const teamsList = teamsListParam !== null && teamsListParam !== void 0 ? teamsListParam : (_match_teams = match === null || match === void 0 ? void 0 : match.teams) !== null && _match_teams !== void 0 ? _match_teams : [];\n        if (!teamIdentifier) return {\n            displayName: 'Unknown',\n            teamKey: 'unknown'\n        };\n        const search = teamIdentifier.toLowerCase();\n        // console.log(\"TeamsSSSS: \", teamsList);\n        const teamObj = teamsList.find((t)=>{\n            var _t_color, _t_name;\n            return ((_t_color = t.color) !== null && _t_color !== void 0 ? _t_color : '').toLowerCase() === search || ((_t_name = t.name) !== null && _t_name !== void 0 ? _t_name : '').toLowerCase() === search;\n        });\n        var _teamObj_name;\n        // console.log('TEAMS: ', match?.teams);\n        const displayName = (_teamObj_name = teamObj === null || teamObj === void 0 ? void 0 : teamObj.name) !== null && _teamObj_name !== void 0 ? _teamObj_name : teamIdentifier;\n        var _teamObj_color, _ref;\n        const teamKey = ((_ref = (_teamObj_color = teamObj === null || teamObj === void 0 ? void 0 : teamObj.color) !== null && _teamObj_color !== void 0 ? _teamObj_color : teamIdentifier) !== null && _ref !== void 0 ? _ref : 'unknown').toLowerCase();\n        return {\n            displayName,\n            teamKey\n        };\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            var _match_teams;\n            if ((match === null || match === void 0 ? void 0 : (_match_teams = match.teams) === null || _match_teams === void 0 ? void 0 : _match_teams.length) && !currentTeam) {\n                // store color key as currentTeam (recommended)\n                setCurrentTeam(match.teams[0].color);\n            // OR setCurrentTeam(match.teams[0].name) if you prefer storing display names\n            }\n        }\n    }[\"Home.useEffect\"], [\n        match\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            if (matchLocked) return; // don't poll/merge updates after a win/lock\n            if (!(match === null || match === void 0 ? void 0 : match.id)) return;\n            const matchStart = new Date(match.startTime);\n            const matchEnd = new Date(matchStart.getTime() + match.durationMinutes * 60 * 1000);\n            const fetchPoll = {\n                \"Home.useEffect.fetchPoll\": async ()=>{\n                    const now = new Date();\n                    if (now < matchStart || now > matchEnd) {\n                        // Don't poll outside match time\n                        return;\n                    }\n                    try {\n                        const pollRes = await fetch('/api/poll-submissions', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                matchId: match.id\n                            })\n                        });\n                        const pollData = await pollRes.json();\n                        if (pollData.updated && pollData.match) {\n                            var _pollData_match, _pollData_match1;\n                            setMatch(pollData.match);\n                            // Build solved map\n                            const solvedMap = {};\n                            const newLogEntries = [];\n                            const posOwners = {};\n                            const problemUpdates = {};\n                            var _pollData_match_teams;\n                            const teamsFromServer = (_pollData_match_teams = (_pollData_match = pollData.match) === null || _pollData_match === void 0 ? void 0 : _pollData_match.teams) !== null && _pollData_match_teams !== void 0 ? _pollData_match_teams : [];\n                            pollData.match.solveLog.forEach({\n                                \"Home.useEffect.fetchPoll\": (entry)=>{\n                                    var _entry_problem;\n                                    const key = \"\".concat(entry.contestId, \"-\").concat(entry.index);\n                                    // console.log(\"ResS :\", teamsFromServer);\n                                    const { displayName, teamKey } = resolveTeamDisplayAndKey(entry.team, teamsFromServer);\n                                    solvedMap[key] = {\n                                        team: teamKey\n                                    };\n                                    // If solveLog includes the problem relation and it has a position, map position -> owner\n                                    if (entry.problem && typeof entry.problem.position === 'number') {\n                                        posOwners[entry.problem.position] = teamKey;\n                                    }\n                                    if (entry.problem) {\n                                        var _entry_problem_name, _entry_problem_rating;\n                                        problemUpdates[key] = {\n                                            name: (_entry_problem_name = entry.problem.name) !== null && _entry_problem_name !== void 0 ? _entry_problem_name : undefined,\n                                            rating: (_entry_problem_rating = entry.problem.rating) !== null && _entry_problem_rating !== void 0 ? _entry_problem_rating : undefined,\n                                            contestId: entry.contestId,\n                                            index: entry.index\n                                        };\n                                    }\n                                    var _entry_problem_name1;\n                                    // Add to new log entries\n                                    const problemName = (_entry_problem_name1 = (_entry_problem = entry.problem) === null || _entry_problem === void 0 ? void 0 : _entry_problem.name) !== null && _entry_problem_name1 !== void 0 ? _entry_problem_name1 : \"Problem \".concat(entry.index);\n                                    const contestAndIndex = \"\".concat(entry.contestId).concat(entry.index);\n                                    newLogEntries.push({\n                                        key,\n                                        message: \"\".concat(displayName, \" solved \").concat(problemName, \" (\").concat(contestAndIndex, \")\"),\n                                        team: teamKey\n                                    });\n                                }\n                            }[\"Home.useEffect.fetchPoll\"]);\n                            setSolved(solvedMap);\n                            setPositionOwners(posOwners); // <-- set state\n                            if (((_pollData_match1 = pollData.match) === null || _pollData_match1 === void 0 ? void 0 : _pollData_match1.problems) && Array.isArray(pollData.match.problems)) {\n                                const normalized = normalizeProblemsFromServer(pollData.match.problems);\n                                setProblems(normalized);\n                            } else if (Object.keys(problemUpdates).length > 0) {\n                                setProblems({\n                                    \"Home.useEffect.fetchPoll\": (prev)=>prev.map({\n                                            \"Home.useEffect.fetchPoll\": (p)=>{\n                                                const k = \"\".concat(p.contestId, \"-\").concat(p.index);\n                                                const upd = problemUpdates[k];\n                                                if (!upd) return p;\n                                                var _upd_name, _upd_rating, _upd_contestId, _upd_index;\n                                                return {\n                                                    ...p,\n                                                    // only override fields provided by server\n                                                    name: (_upd_name = upd.name) !== null && _upd_name !== void 0 ? _upd_name : p.name,\n                                                    rating: (_upd_rating = upd.rating) !== null && _upd_rating !== void 0 ? _upd_rating : p.rating,\n                                                    // contestId/index normally unchanged, but included for completeness:\n                                                    contestId: (_upd_contestId = upd.contestId) !== null && _upd_contestId !== void 0 ? _upd_contestId : p.contestId,\n                                                    index: (_upd_index = upd.index) !== null && _upd_index !== void 0 ? _upd_index : p.index\n                                                };\n                                            }\n                                        }[\"Home.useEffect.fetchPoll\"])\n                                }[\"Home.useEffect.fetchPoll\"]);\n                            }\n                            // then publish owners/solved so UI can map by problem.position reliably\n                            setSolved(solvedMap);\n                            setPositionOwners(posOwners);\n                            // Update log: either replace entirely or merge with previous log\n                            // Here, just replace with latest from DB (or merge if you want)\n                            setLog({\n                                \"Home.useEffect.fetchPoll\": (prevLog)=>{\n                                    var _pollData_match;\n                                    const combined = [\n                                        ...newLogEntries,\n                                        ...prevLog\n                                    ];\n                                    const uniqueMap = new Map();\n                                    for (const entry of combined){\n                                        if (!uniqueMap.has(entry.key)) uniqueMap.set(entry.key, entry);\n                                    }\n                                    const deduped = Array.from(uniqueMap.values()).slice(0, 10);\n                                    // notify only for messages not in prevLog\n                                    const prevMessages = new Set(prevLog.map({\n                                        \"Home.useEffect.fetchPoll\": (x)=>x.message\n                                    }[\"Home.useEffect.fetchPoll\"]));\n                                    newLogEntries.forEach({\n                                        \"Home.useEffect.fetchPoll\": (ne)=>{\n                                            if (!prevMessages.has(ne.message) && !notifiedRef.current.has(ne.message)) {\n                                                // send notification\n                                                notifyBrowser(\"Solve reported\", ne.message);\n                                                // mark as notified and persist\n                                                notifiedRef.current.add(ne.message);\n                                            }\n                                        }\n                                    }[\"Home.useEffect.fetchPoll\"]);\n                                    // persist updated notified set\n                                    if ((_pollData_match = pollData.match) === null || _pollData_match === void 0 ? void 0 : _pollData_match.id) persistNotified(pollData.match.id);\n                                    return deduped;\n                                }\n                            }[\"Home.useEffect.fetchPoll\"]);\n                        }\n                    } catch (err) {\n                        console.error('Polling submissions failed', err);\n                    }\n                }\n            }[\"Home.useEffect.fetchPoll\"];\n            fetchPoll();\n            const interval = setInterval(fetchPoll, 10000); // REMEMBER TO CHANGE TO 15S\n            return ({\n                \"Home.useEffect\": ()=>clearInterval(interval)\n            })[\"Home.useEffect\"];\n        }\n    }[\"Home.useEffect\"], [\n        match === null || match === void 0 ? void 0 : match.id,\n        match === null || match === void 0 ? void 0 : match.startTime,\n        match === null || match === void 0 ? void 0 : match.durationMinutes,\n        matchLocked\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            const interval = setInterval({\n                \"Home.useEffect.interval\": ()=>{\n                    setNow(new Date());\n                }\n            }[\"Home.useEffect.interval\"], 1000);\n            return ({\n                \"Home.useEffect\": ()=>clearInterval(interval)\n            })[\"Home.useEffect\"];\n        }\n    }[\"Home.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            if (!match) return;\n            const start = new Date(match.startTime);\n            const end = new Date(start.getTime() + match.durationMinutes * 60 * 1000);\n            const now = new Date();\n            if (now >= end) {\n                setMatchLocked(true);\n            }\n        }\n    }[\"Home.useEffect\"], [\n        match\n    ]);\n    // Fetch problems when match changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            var _match_problems;\n            if (!match) return;\n            var _match_problems_length;\n            // console.log(\"for crying out loud: \", match.problems)\n            const len = (_match_problems_length = (_match_problems = match.problems) === null || _match_problems === void 0 ? void 0 : _match_problems.length) !== null && _match_problems_length !== void 0 ? _match_problems_length : 0;\n            if (len === 36) setgridSize(6);\n            else if (len === 25) setgridSize(5);\n            else if (len === 16) setgridSize(4);\n            else setgridSize(3);\n            // Normalize incoming problems to avoid duplicates / unexpected increases\n            const normalized = normalizeProblemsFromServer(match.problems || []);\n            setProblems(normalized); // problems now have contestId, index, name, rating, position\n            setLoading(false);\n        }\n    }[\"Home.useEffect\"], [\n        match\n    ]);\n    function formatDuration(ms) {\n        // console.log(\"Num: \", ms)\n        // console.log(\"match.startTime:\", match?.startTime);\n        // console.log(\"start: \", Date.now())\n        // console.log(\"NOOOOOOOOOOOOOOOOOLSDKFJLSDKFHLAKSHFLKSDJFLKHSDLFKJLNONONONONON\")\n        const totalSeconds = Math.max(0, Math.floor(ms / 1000));\n        const hours = String(Math.floor(totalSeconds / 3600)).padStart(2, \"0\");\n        const minutes = String(Math.floor(totalSeconds % 3600 / 60)).padStart(2, \"0\");\n        const seconds = String(totalSeconds % 60).padStart(2, \"0\");\n        return \"\".concat(hours, \":\").concat(minutes, \":\").concat(seconds);\n    }\n    function formatCountdown(ms) {\n        if (ms <= 0) return \"00:00:00\";\n        const totalSeconds = Math.floor(ms / 1000);\n        const hours = Math.floor(totalSeconds / 3600).toString().padStart(2, \"0\");\n        const minutes = Math.floor(totalSeconds % 3600 / 60).toString().padStart(2, \"0\");\n        const seconds = (totalSeconds % 60).toString().padStart(2, \"0\");\n        return \"\".concat(hours, \":\").concat(minutes, \":\").concat(seconds);\n    }\n    function CountdownToStart(param) {\n        let { startTime } = param;\n        _s();\n        const [timeLeft, setTimeLeft] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n            \"Home.CountdownToStart.useState\": ()=>startTime.getTime() - Date.now()\n        }[\"Home.CountdownToStart.useState\"]);\n        (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n            \"Home.CountdownToStart.useEffect\": ()=>{\n                const interval = setInterval({\n                    \"Home.CountdownToStart.useEffect.interval\": ()=>{\n                        setTimeLeft(startTime.getTime() - Date.now());\n                    }\n                }[\"Home.CountdownToStart.useEffect.interval\"], 1000);\n                return ({\n                    \"Home.CountdownToStart.useEffect\": ()=>clearInterval(interval)\n                })[\"Home.CountdownToStart.useEffect\"];\n            }\n        }[\"Home.CountdownToStart.useEffect\"], [\n            startTime\n        ]);\n        if (timeLeft <= 0) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: \"Match is starting now...\"\n            }, void 0, false, {\n                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                lineNumber: 506,\n                columnNumber: 14\n            }, this);\n        }\n        const minutes = Math.floor(timeLeft / 60000);\n        const seconds = Math.floor(timeLeft % 60000 / 1000);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            className: \"text-yellow-500\",\n            children: [\n                \"Match starts in \",\n                formatDuration(startTime.getTime() - Date.now())\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n            lineNumber: 513,\n            columnNumber: 7\n        }, this);\n    }\n    _s(CountdownToStart, \"3T6381qpeI/cVklkZj00PExWeaY=\");\n    // useEffect(() => {\n    //   const theme = localStorage.getItem('theme');\n    //   const prefersDark = theme === 'dark' || (!theme && window.matchMedia('(prefers-color-scheme: dark)').matches);\n    //   setIsDarkMode(prefersDark);\n    //   document.documentElement.classList.toggle('dark', prefersDark);\n    // }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            // console.log(\"HHHEHEHE:\", problems);\n            if (!problems || problems.length === 0) return;\n            if (matchLocked) return; // already locked\n            // console.log(\"HHHEHEHE:\")\n            const w = findWinnerFromSolved(solved, problems, gridSize);\n            // console.log(\"P: \", w);\n            if (w && !winner) {\n                var _match_teams, _teamObj_color, _currentTeam_toLowerCase;\n                setWinner(w);\n                setConfettiActive(true);\n                setMatchLocked(true);\n                const teamObj = match === null || match === void 0 ? void 0 : (_match_teams = match.teams) === null || _match_teams === void 0 ? void 0 : _match_teams.find({\n                    \"Home.useEffect\": (t)=>{\n                        var _t_color, _t_name;\n                        return ((_t_color = t.color) === null || _t_color === void 0 ? void 0 : _t_color.toLowerCase()) === (currentTeam === null || currentTeam === void 0 ? void 0 : currentTeam.toLowerCase()) || ((_t_name = t.name) === null || _t_name === void 0 ? void 0 : _t_name.toLowerCase()) === (currentTeam === null || currentTeam === void 0 ? void 0 : currentTeam.toLowerCase());\n                    }\n                }[\"Home.useEffect\"]);\n                var _teamObj_name;\n                // display name (for UI) and key (for internal use)\n                // console.log('displayName: ', teamObj?.name)\n                const displayName = (_teamObj_name = teamObj === null || teamObj === void 0 ? void 0 : teamObj.name) !== null && _teamObj_name !== void 0 ? _teamObj_name : currentTeam;\n                var _teamObj_color_toLowerCase, _ref;\n                const teamKey = (_ref = (_teamObj_color_toLowerCase = teamObj === null || teamObj === void 0 ? void 0 : (_teamObj_color = teamObj.color) === null || _teamObj_color === void 0 ? void 0 : _teamObj_color.toLowerCase()) !== null && _teamObj_color_toLowerCase !== void 0 ? _teamObj_color_toLowerCase : currentTeam === null || currentTeam === void 0 ? void 0 : (_currentTeam_toLowerCase = currentTeam.toLowerCase) === null || _currentTeam_toLowerCase === void 0 ? void 0 : _currentTeam_toLowerCase.call(currentTeam)) !== null && _ref !== void 0 ? _ref : 'unknown';\n                // add final summary line to the log\n                // const key = `${problems[i].contestId}-${problems[i].index}`;\n                setLog({\n                    \"Home.useEffect\": (prev)=>{\n                        const problemList = w.keys.map({\n                            \"Home.useEffect.problemList\": (k)=>k.replace('-', '')\n                        }[\"Home.useEffect.problemList\"]).join(', '); // basic formatting\n                        const finalMsg = \"\".concat(displayName, \" completed \").concat(w.type === 'row' ? 'a row' : w.type === 'col' ? 'a column' : w.type === 'diag' ? 'the main diagonal' : 'the anti-diagonal');\n                        return [\n                            {\n                                message: finalMsg,\n                                team: w.team.toLowerCase(),\n                                key: \"\"\n                            },\n                            ...prev\n                        ].slice(0, 10);\n                    }\n                }[\"Home.useEffect\"]);\n            // OPTIONAL: persist a lock on the server (if you add a /api/lockMatch endpoint)\n            // fetch('/api/lockMatch', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ matchId: match?.id }) }).catch(console.warn);\n            }\n        }\n    }[\"Home.useEffect\"], [\n        solved,\n        problems,\n        winner\n    ]);\n    // function toggleTheme() {\n    //   const newTheme = !isDarkMode;\n    //   setIsDarkMode(newTheme);\n    //   localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n    //   document.documentElement.classList.toggle('dark', newTheme);\n    // }\n    function findWinnerFromSolved(solvedMap, problemsArr, gSize) {\n        // console.log(\"PPP: \", problemsArr);\n        // console.log(\":P: \", solvedMap);\n        if (!problemsArr || problemsArr.length === 0) return null;\n        const size = gSize;\n        // Defensive: ensure problemsArr length matches expected grid size (size * size).\n        // If it doesn't, bail out and avoid index OOB. Log for debugging.\n        if (problemsArr.length !== size * size) {\n            console.warn(\"findWinnerFromSolved: mismatch problems.length (\".concat(problemsArr.length, \") vs expected (\").concat(size * size, \"). Skipping winner detection.\"));\n            return null;\n        }\n        // owner grid: team name string | null\n        const ownerGrid = Array.from({\n            length: size\n        }, ()=>Array(size).fill(null));\n        for(let i = 0; i < problemsArr.length; i++){\n            var _solvedMap_i;\n            const r = Math.floor(i / size);\n            const c = i % size;\n            var _solvedMap_i_team;\n            ownerGrid[r][c] = (_solvedMap_i_team = (_solvedMap_i = solvedMap[i]) === null || _solvedMap_i === void 0 ? void 0 : _solvedMap_i.team) !== null && _solvedMap_i_team !== void 0 ? _solvedMap_i_team : null;\n        }\n        // rows\n        for(let r = 0; r < size; r++){\n            const first = ownerGrid[r][0];\n            if (first && ownerGrid[r].every((cell)=>cell === first)) {\n                const keys = Array.from({\n                    length: size\n                }, (_, c)=>\"\".concat(problemsArr[r * size + c].contestId, \"-\").concat(problemsArr[r * size + c].index));\n                return {\n                    team: first,\n                    type: 'row',\n                    index: r,\n                    keys\n                };\n            }\n        }\n        // columns\n        for(let c = 0; c < size; c++){\n            const first = ownerGrid[0][c];\n            if (first && ownerGrid.every((row)=>row[c] === first)) {\n                const keys = Array.from({\n                    length: size\n                }, (_, r)=>\"\".concat(problemsArr[r * size + c].contestId, \"-\").concat(problemsArr[r * size + c].index));\n                return {\n                    team: first,\n                    type: 'col',\n                    index: c,\n                    keys\n                };\n            }\n        }\n        // main diagonal\n        const firstDiag = ownerGrid[0][0];\n        if (firstDiag && ownerGrid.every((row, i)=>row[i] === firstDiag)) {\n            const keys = Array.from({\n                length: size\n            }, (_, i)=>\"\".concat(problemsArr[i * size + i].contestId, \"-\").concat(problemsArr[i * size + i].index));\n            return {\n                team: firstDiag,\n                type: 'diag',\n                index: 0,\n                keys\n            };\n        }\n        // anti-diagonal\n        const firstAnti = ownerGrid[0][size - 1];\n        if (firstAnti && ownerGrid.every((row, i)=>row[size - 1 - i] === firstAnti)) {\n            const keys = Array.from({\n                length: size\n            }, (_, i)=>\"\".concat(problemsArr[i * size + (size - 1 - i)].contestId, \"-\").concat(problemsArr[i * size + (size - 1 - i)].index));\n            return {\n                team: firstAnti,\n                type: 'anti-diag',\n                index: 1,\n                keys\n            };\n        }\n        return null;\n    }\n    function toggleSquare(i) {\n        var _match_teams, _teamObj_color, _currentTeam_toLowerCase;\n        if (matchLocked) return;\n        const key = \"\".concat(problems[i].contestId, \"-\").concat(problems[i].index);\n        if (solved[key]) return;\n        const time = new Date().toLocaleTimeString();\n        setSolved((prev)=>({\n                ...prev,\n                [key]: {\n                    team: currentTeam,\n                    timestamp: time\n                }\n            }));\n        const prob = problems[i];\n        const problemId = \"\".concat(prob.contestId).concat(prob.index);\n        const teamObj = match === null || match === void 0 ? void 0 : (_match_teams = match.teams) === null || _match_teams === void 0 ? void 0 : _match_teams.find((t)=>{\n            var _t_color, _t_name;\n            return ((_t_color = t.color) === null || _t_color === void 0 ? void 0 : _t_color.toLowerCase()) === (currentTeam === null || currentTeam === void 0 ? void 0 : currentTeam.toLowerCase()) || ((_t_name = t.name) === null || _t_name === void 0 ? void 0 : _t_name.toLowerCase()) === (currentTeam === null || currentTeam === void 0 ? void 0 : currentTeam.toLowerCase());\n        });\n        var _teamObj_name;\n        // console.log('the teams: ', match?.teams);\n        // display name (for UI) and key (for internal use)\n        // console.log('displayName: ', teamObj?.name)\n        const displayName = (_teamObj_name = teamObj === null || teamObj === void 0 ? void 0 : teamObj.name) !== null && _teamObj_name !== void 0 ? _teamObj_name : currentTeam;\n        var _teamObj_color_toLowerCase, _ref;\n        const teamKey = (_ref = (_teamObj_color_toLowerCase = teamObj === null || teamObj === void 0 ? void 0 : (_teamObj_color = teamObj.color) === null || _teamObj_color === void 0 ? void 0 : _teamObj_color.toLowerCase()) !== null && _teamObj_color_toLowerCase !== void 0 ? _teamObj_color_toLowerCase : currentTeam === null || currentTeam === void 0 ? void 0 : (_currentTeam_toLowerCase = currentTeam.toLowerCase) === null || _currentTeam_toLowerCase === void 0 ? void 0 : _currentTeam_toLowerCase.call(currentTeam)) !== null && _ref !== void 0 ? _ref : 'unknown';\n        // console.log('Name: ', displayName);\n        const newEntry = {\n            key,\n            message: \"\".concat(displayName, \" solved \").concat(prob.name, \" (\").concat(problemId, \")\"),\n            team: teamKey\n        };\n        setLog((prev)=>{\n            //   const newEntry = {\n            //     message: `${time} — ${currentTeam} solved ${problems[i].name}`,\n            //     team: currentTeam.toLowerCase(), // make sure team matches keys in teamColors\n            //   };\n            const combined = [\n                newEntry,\n                ...prev\n            ];\n            // Optional: remove duplicate messages if needed\n            const uniqueMap = new Map();\n            for (const entry of combined){\n                if (!uniqueMap.has(entry.key)) {\n                    uniqueMap.set(entry.key, entry);\n                }\n            }\n            return Array.from(uniqueMap.values()).slice(0, 10);\n        });\n    }\n    // ======= EARLY RETURN if no match ===========\n    if (loading) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Loading__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n        lineNumber: 667,\n        columnNumber: 23\n    }, this); // while fetching\n    if (!match) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n            className: \"p-6\",\n            children: \"Match not found\"\n        }, void 0, false, {\n            fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n            lineNumber: 669,\n            columnNumber: 12\n        }, this);\n    }\n    // ==== MATCH IS NOT NULL BELOW, SAFE TO USE match START ====\n    const matchStart = new Date(match.startTime);\n    const matchEnd = new Date(matchStart.getTime() + match.durationMinutes * 60 * 1000);\n    const currentTime = new Date();\n    const matchHasStarted = currentTime >= matchStart;\n    const matchHasEnded = currentTime >= matchEnd;\n    const matchOngoing = matchHasStarted && !matchHasEnded && !matchLocked;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"min-h-screen bg-white dark:bg-gray-900 dark:text-gray-100 transition-colors duration-300\",\n        children: [\n            winner && confettiActive && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_confetti__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                width: width,\n                height: height,\n                recycle: false,\n                numberOfPieces: 300\n            }, void 0, false, {\n                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                lineNumber: 686,\n                columnNumber: 42\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"w-full bg-gray-100 dark:bg-gray-800 border-b dark:border-gray-700 shadow-sm sticky top-0 z-20\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-6xl mx-auto flex justify-between items-center px-4 py-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                            href: \"http://localhost:3000/home\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-2xl font-extrabold bg-gradient-to-r from-purple-500 to-pink-500 text-transparent bg-clip-text tracking-wide\",\n                                children: \"Bingo CP\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                                lineNumber: 693,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                            lineNumber: 692,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-4 border-l pl-6 ml-4 dark:border-gray-600\",\n                            children: [\n                                'Home',\n                                'ICPC Mode',\n                                'IOI Mode',\n                                'Help'\n                            ].map((label)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                    href: \"\".concat(links[label]),\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"cursor-pointer px-4 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-sm\",\n                                        children: label\n                                    }, label, false, {\n                                        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                                        lineNumber: 700,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                                    lineNumber: 699,\n                                    columnNumber: 15\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                            lineNumber: 697,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                    lineNumber: 691,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                lineNumber: 690,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center mt-4\",\n                children: [\n                    !matchHasStarted && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CountdownToStart, {\n                        startTime: matchStart\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                        lineNumber: 724,\n                        columnNumber: 11\n                    }, this),\n                    matchHasEnded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-red-500\",\n                        children: \"Match has ended.\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                        lineNumber: 727,\n                        columnNumber: 11\n                    }, this),\n                    matchOngoing && match && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-green-500\",\n                        children: [\n                            \"Match ends in \",\n                            formatDuration(matchEnd.getTime() - Date.now())\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                        lineNumber: 730,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                lineNumber: 722,\n                columnNumber: 7\n            }, this),\n            matchHasStarted ? loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Loading__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                lineNumber: 739,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid \".concat(gridClasses[gridSize], \" gap-x-0 gap-y-4 justify-items-center mt-4 mx-70\"),\n                children: problems.map((problem, idx)=>{\n                    var _winner_keys;\n                    const key = \"\".concat(problem.contestId, \"-\").concat(problem.index);\n                    const solvedInfo = solved[key];\n                    var _problem_position, _solvedInfo_team;\n                    const ownerTeam = (_solvedInfo_team = solvedInfo === null || solvedInfo === void 0 ? void 0 : solvedInfo.team) !== null && _solvedInfo_team !== void 0 ? _solvedInfo_team : positionOwners[(_problem_position = problem.position) !== null && _problem_position !== void 0 ? _problem_position : idx]; // fallback by position\n                    const isWinningCell = winner === null || winner === void 0 ? void 0 : (_winner_keys = winner.keys) === null || _winner_keys === void 0 ? void 0 : _winner_keys.includes(key);\n                    // console.log('Rendering problem', key, 'solved by', solvedInfo?.team, 'teamColor:', teamColors[solvedInfo?.team]);\n                    const teamColor = ownerTeam ? teamColors[ownerTeam] || 'bg-gray-500 text-white' : 'bg-white hover:bg-blue-100 dark:bg-gray-800 dark:hover:bg-blue-900 text-gray-800 dark:text-gray-200';\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        onClick: ()=>window.open(\"https://codeforces.com/contest/\".concat(problem.contestId, \"/problem/\").concat(problem.index), '_blank'),\n                        // onDoubleClick={() => { // DONT forget to remove it later\n                        // // double click will locally mark for testing (toggleSquare) but disabled after lock\n                        // if (!matchLocked) toggleSquare(idx);\n                        // }}\n                        onMouseEnter: (e)=>{\n                            e.currentTarget.classList.add('scale-[1.04]', 'shadow-md');\n                        },\n                        onMouseLeave: (e)=>{\n                            e.currentTarget.classList.remove('scale-[1.04]', 'shadow-md');\n                        },\n                        className: \"w-36 h-24 p-2 flex flex-col justify-center items-center text-center rounded shadow cursor-pointer transition duration-200\\n                  \".concat(teamColor, \" \").concat(ownerTeam ? 'text-white' : '', \" \").concat(isWinningCell ? ' ring-4 ring-yellow-400 scale-[1.06]' : ''),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm font-semibold\",\n                                children: [\n                                    problem.rating,\n                                    \" - \",\n                                    problem.index\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                                lineNumber: 774,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-xs mt-1\",\n                                children: problem.name\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                                lineNumber: 777,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, \"\".concat(problem.contestId, \"-\").concat(problem.index), true, {\n                        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                        lineNumber: 753,\n                        columnNumber: 15\n                    }, this);\n                })\n            }, void 0, false, {\n                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                lineNumber: 741,\n                columnNumber: 9\n            }, this) : null,\n            showLog && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed bottom-4 left-1 w-72 max-h-[80vh] overflow-y-auto border rounded p-3 bg-white dark:bg-gray-900 shadow z-30\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-semibold mb-2\",\n                        children: \"Solve Log\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                        lineNumber: 793,\n                        columnNumber: 11\n                    }, this),\n                    log.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-gray-500\",\n                        children: \"No solves yet\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                        lineNumber: 795,\n                        columnNumber: 13\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        className: \"text-sm space-y-2\",\n                        children: log.map((entry, idx)=>{\n                            const bgColor = teamColors[entry.team] || 'bg-gray-200 dark:bg-gray-700';\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                className: \"\".concat(bgColor, \" text-white px-3 py-2 rounded shadow-sm\"),\n                                children: entry.message\n                            }, idx, false, {\n                                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                                lineNumber: 801,\n                                columnNumber: 19\n                            }, this);\n                        })\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                        lineNumber: 797,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                lineNumber: 792,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>setShowLog((prev)=>!prev),\n                className: \"cursor-pointer fixed bottom-[calc(4rem+76vh)] left-4 px-3 py-1 bg-gray-300 dark:bg-gray-700 text-black dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-600 transition z-40\",\n                children: showLog ? 'Hide Log' : 'Show Log'\n            }, void 0, false, {\n                fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n                lineNumber: 815,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\bingo-cp\\\\bingo-cp\\\\bingo-cp\\\\src\\\\app\\\\match\\\\[id]\\\\page.tsx\",\n        lineNumber: 683,\n        columnNumber: 5\n    }, this);\n}\n_s1(Home, \"60p0aQsvoS4RWGvVJRAFHHqRkHo=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useParams,\n        useWindowSize\n    ];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/match/[id]/page.tsx\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Cbingo-cp%5C%5Cbingo-cp%5C%5Cbingo-cp%5C%5Csrc%5C%5Capp%5C%5Cmatch%5C%5C%5Bid%5D%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);