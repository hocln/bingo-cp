"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/getProblems";
exports.ids = ["pages/api/getProblems"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FgetProblems&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CgetProblems.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FgetProblems&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CgetProblems.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_getProblems_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\getProblems.ts */ \"(api-node)/./pages/api/getProblems.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_getProblems_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_getProblems_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/getProblems\",\n        pathname: \"/api/getProblems\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_getProblems_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/getProblems\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/getProblems\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FgetProblems&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CgetProblems.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/getProblems.ts":
/*!**********************************!*\
  !*** ./pages/api/getProblems.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// pages/api/getProblems.ts\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Only POST requests allowed'\n        });\n    }\n    // const { ..., exclude = [] } = req.body\n    const { minRating = 800, maxRating = 3500, minContestId = 0, maxContestId = 999999, userHandles = [], count = 25, exclude = [] } = req.body;\n    try {\n        const response = await fetch('https://codeforces.com/api/problemset.problems');\n        const data = await response.json();\n        if (data.status !== 'OK') {\n            return res.status(500).json({\n                error: 'Failed to fetch problems from Codeforces.'\n            });\n        }\n        let problems = data.result.problems;\n        // Step 1: Filter by rating, contestId, remove special tag\n        problems = problems.filter((p)=>!p.tags.includes('*special problem') && p.rating && p.rating >= minRating && p.rating <= maxRating && !exclude.includes(String(p.contestId) + p.index));\n        // Step 2: Get solved problems for all users\n        const solvedSet = new Set();\n        for (const handle of userHandles){\n            const submissionsRes = await fetch(`https://codeforces.com/api/user.status?handle=${handle}&from=1&count=10000`);\n            const submissionsData = await submissionsRes.json();\n            if (submissionsData.status !== 'OK') continue;\n            const submissions = submissionsData.result;\n            for (const sub of submissions){\n                if (sub.verdict === 'OK') {\n                    solvedSet.add(`${sub.problem.contestId}-${sub.problem.index}`);\n                }\n            }\n        }\n        // Step 3: Filter out solved problems\n        const unsolved = problems.filter((p)=>!solvedSet.has(`${p.contestId}-${p.index}`) && !exclude.includes(`${p.contestId}-${p.index}`));\n        let idx = 0;\n        // Step 4: Shuffle and pick `count` problems\n        if (unsolved.length < count) {\n            while(unsolved.length < count){\n                unsolved.push(problems[idx]);\n                idx += 1;\n            }\n        }\n        const shuffled = unsolved.sort(()=>Math.random() - 0.5);\n        const selected = shuffled.slice(0, count);\n        // console.log('before problemo')\n        // console.log('problemo: ', selected)\n        return res.status(200).json({\n            problems: selected\n        });\n    } catch (error) {\n        console.error(error);\n        return res.status(500).json({\n            error: 'Internal server error'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxPQUFPO1FBQ2QyQyxRQUFRM0MsS0FBSyxDQUFDQTtRQUNkLE9BQU9KLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUF3QjtJQUMvRDtBQUNGIiwic291cmNlcyI6WyJEOlxcYmluZ28tY3BcXGJpbmdvLWNwXFxiaW5nby1jcFxccGFnZXNcXGFwaVxcZ2V0UHJvYmxlbXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFnZXMvYXBpL2dldFByb2JsZW1zLnRzXG5cbmltcG9ydCB0eXBlIHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnXG5cbnR5cGUgUHJvYmxlbSA9IHtcbiAgY29udGVzdElkOiBudW1iZXJcbiAgaW5kZXg6IHN0cmluZ1xuICBuYW1lOiBzdHJpbmdcbiAgcmF0aW5nPzogbnVtYmVyXG4gIHRhZ3M6IHN0cmluZ1tdXG59XG5cbnR5cGUgU3VibWlzc2lvbiA9IHtcbiAgcHJvYmxlbTogUHJvYmxlbVxuICB2ZXJkaWN0OiBzdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6ICdPbmx5IFBPU1QgcmVxdWVzdHMgYWxsb3dlZCcgfSlcbiAgfVxuXG4gIC8vIGNvbnN0IHsgLi4uLCBleGNsdWRlID0gW10gfSA9IHJlcS5ib2R5XG5cbiAgY29uc3Qge1xuICAgIG1pblJhdGluZyA9IDgwMCxcbiAgICBtYXhSYXRpbmcgPSAzNTAwLFxuICAgIG1pbkNvbnRlc3RJZCA9IDAsXG4gICAgbWF4Q29udGVzdElkID0gOTk5OTk5LFxuICAgIHVzZXJIYW5kbGVzID0gW10sXG4gICAgY291bnQgPSAyNSxcbiAgICBleGNsdWRlID0gW10sXG4gIH0gPSByZXEuYm9keVxuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9jb2RlZm9yY2VzLmNvbS9hcGkvcHJvYmxlbXNldC5wcm9ibGVtcycpXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIGlmIChkYXRhLnN0YXR1cyAhPT0gJ09LJykge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdGYWlsZWQgdG8gZmV0Y2ggcHJvYmxlbXMgZnJvbSBDb2RlZm9yY2VzLicgfSlcbiAgICB9XG5cbiAgICBsZXQgcHJvYmxlbXM6IFByb2JsZW1bXSA9IGRhdGEucmVzdWx0LnByb2JsZW1zXG5cbiAgICAvLyBTdGVwIDE6IEZpbHRlciBieSByYXRpbmcsIGNvbnRlc3RJZCwgcmVtb3ZlIHNwZWNpYWwgdGFnXG4gICAgcHJvYmxlbXMgPSBwcm9ibGVtcy5maWx0ZXIoXG4gICAgICAocCkgPT5cbiAgICAgICAgIXAudGFncy5pbmNsdWRlcygnKnNwZWNpYWwgcHJvYmxlbScpICYmXG4gICAgICAgIHAucmF0aW5nICYmXG4gICAgICAgIHAucmF0aW5nID49IG1pblJhdGluZyAmJlxuICAgICAgICBwLnJhdGluZyA8PSBtYXhSYXRpbmcgJiZcbiAgICAgICAgIWV4Y2x1ZGUuaW5jbHVkZXMoU3RyaW5nKHAuY29udGVzdElkKSArIHAuaW5kZXgpXG4gICAgICAgIC8vIHAuY29udGVzdElkID49IG1pbkNvbnRlc3RJZCAmJlxuICAgICAgICAvLyBwLmNvbnRlc3RJZCA8PSBtYXhDb250ZXN0SWRcbiAgICApXG5cbiAgICAvLyBTdGVwIDI6IEdldCBzb2x2ZWQgcHJvYmxlbXMgZm9yIGFsbCB1c2Vyc1xuICAgIGNvbnN0IHNvbHZlZFNldCA9IG5ldyBTZXQ8c3RyaW5nPigpXG5cbiAgICBmb3IgKGNvbnN0IGhhbmRsZSBvZiB1c2VySGFuZGxlcykge1xuICAgICAgY29uc3Qgc3VibWlzc2lvbnNSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgYGh0dHBzOi8vY29kZWZvcmNlcy5jb20vYXBpL3VzZXIuc3RhdHVzP2hhbmRsZT0ke2hhbmRsZX0mZnJvbT0xJmNvdW50PTEwMDAwYFxuICAgICAgKVxuICAgICAgY29uc3Qgc3VibWlzc2lvbnNEYXRhID0gYXdhaXQgc3VibWlzc2lvbnNSZXMuanNvbigpXG5cbiAgICAgIGlmIChzdWJtaXNzaW9uc0RhdGEuc3RhdHVzICE9PSAnT0snKSBjb250aW51ZVxuXG4gICAgICBjb25zdCBzdWJtaXNzaW9uczogU3VibWlzc2lvbltdID0gc3VibWlzc2lvbnNEYXRhLnJlc3VsdFxuXG4gICAgICBmb3IgKGNvbnN0IHN1YiBvZiBzdWJtaXNzaW9ucykge1xuICAgICAgICBpZiAoc3ViLnZlcmRpY3QgPT09ICdPSycpIHtcbiAgICAgICAgICBzb2x2ZWRTZXQuYWRkKGAke3N1Yi5wcm9ibGVtLmNvbnRlc3RJZH0tJHtzdWIucHJvYmxlbS5pbmRleH1gKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gU3RlcCAzOiBGaWx0ZXIgb3V0IHNvbHZlZCBwcm9ibGVtc1xuICAgIGNvbnN0IHVuc29sdmVkID0gcHJvYmxlbXMuZmlsdGVyKFxuICAgICAgKHApID0+ICFzb2x2ZWRTZXQuaGFzKGAke3AuY29udGVzdElkfS0ke3AuaW5kZXh9YCkgJiYgIWV4Y2x1ZGUuaW5jbHVkZXMoYCR7cC5jb250ZXN0SWR9LSR7cC5pbmRleH1gKVxuICAgIClcbiAgICBsZXQgaWR4ID0gMDtcbiAgICAvLyBTdGVwIDQ6IFNodWZmbGUgYW5kIHBpY2sgYGNvdW50YCBwcm9ibGVtc1xuICAgIGlmKHVuc29sdmVkLmxlbmd0aCA8IGNvdW50KSB7XG4gICAgICB3aGlsZSh1bnNvbHZlZC5sZW5ndGggPCBjb3VudCkge1xuICAgICAgICB1bnNvbHZlZC5wdXNoKHByb2JsZW1zW2lkeF0pO1xuICAgICAgICBpZHggKz0gMTtcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgc2h1ZmZsZWQgPSB1bnNvbHZlZC5zb3J0KCgpID0+IE1hdGgucmFuZG9tKCkgLSAwLjUpXG4gICAgY29uc3Qgc2VsZWN0ZWQgPSBzaHVmZmxlZC5zbGljZSgwLCBjb3VudClcbiAgICAvLyBjb25zb2xlLmxvZygnYmVmb3JlIHByb2JsZW1vJylcbiAgICAvLyBjb25zb2xlLmxvZygncHJvYmxlbW86ICcsIHNlbGVjdGVkKVxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHByb2JsZW1zOiBzZWxlY3RlZCB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0pXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwibWluUmF0aW5nIiwibWF4UmF0aW5nIiwibWluQ29udGVzdElkIiwibWF4Q29udGVzdElkIiwidXNlckhhbmRsZXMiLCJjb3VudCIsImV4Y2x1ZGUiLCJib2R5IiwicmVzcG9uc2UiLCJmZXRjaCIsImRhdGEiLCJwcm9ibGVtcyIsInJlc3VsdCIsImZpbHRlciIsInAiLCJ0YWdzIiwiaW5jbHVkZXMiLCJyYXRpbmciLCJTdHJpbmciLCJjb250ZXN0SWQiLCJpbmRleCIsInNvbHZlZFNldCIsIlNldCIsImhhbmRsZSIsInN1Ym1pc3Npb25zUmVzIiwic3VibWlzc2lvbnNEYXRhIiwic3VibWlzc2lvbnMiLCJzdWIiLCJ2ZXJkaWN0IiwiYWRkIiwicHJvYmxlbSIsInVuc29sdmVkIiwiaGFzIiwiaWR4IiwibGVuZ3RoIiwicHVzaCIsInNodWZmbGVkIiwic29ydCIsIk1hdGgiLCJyYW5kb20iLCJzZWxlY3RlZCIsInNsaWNlIiwiY29uc29sZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/getProblems.ts\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FgetProblems&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CgetProblems.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();